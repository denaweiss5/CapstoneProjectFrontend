[{"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/index.js":"1","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/App.js":"2","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reportWebVitals.js":"3","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Navbar.js":"4","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/index.js":"5","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/currentUser.js":"6","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/auth.js":"7","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/LoginForm.js":"8","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RegisterForm.js":"9","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/users.js":"10","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/LandingPage.js":"11","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/HomePage.js":"12","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Diaries.js":"13","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Habits.js":"14","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RecipesContainer.js":"15","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/AccountInfo.js":"16","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/weightEntries.js":"17","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/mealEntries.js":"18","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/exerciseEntries.js":"19","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/weightEntriesContainer.js":"20","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/weightEntry.js":"21","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/WeightEntry.js":"22","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/WeightEntriesContainer.js":"23","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/weightEntries.js":"24","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/ExerciseEntriesContainer.js":"25","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/ExerciseEntry.js":"26","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/NetCalories.js":"27","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Recipes.js":"28","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/recipes.js":"29","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/recipes.js":"30","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RecipeCard.js":"31","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/MealEntriesContainer.js":"32","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/history/index.js":"33","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/viewRecipe.js":"34","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/SearchBar.js":"35","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/MealEntry.js":"36","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/exerciseEntries.js":"37","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/mealEntries.js":"38","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/mealCalories.js":"39","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/exerciseCalories.js":"40","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/redoHP.js":"41"},{"size":635,"mtime":1612891601633,"results":"42","hashOfConfig":"43"},{"size":2982,"mtime":1613010685174,"results":"44","hashOfConfig":"43"},{"size":362,"mtime":1612196658875,"results":"45","hashOfConfig":"43"},{"size":2622,"mtime":1612977902657,"results":"46","hashOfConfig":"43"},{"size":774,"mtime":1612993219470,"results":"47","hashOfConfig":"43"},{"size":666,"mtime":1612912768245,"results":"48","hashOfConfig":"43"},{"size":304,"mtime":1612890010559,"results":"49","hashOfConfig":"43"},{"size":2320,"mtime":1613011162463,"results":"50","hashOfConfig":"43"},{"size":2432,"mtime":1613011178900,"results":"51","hashOfConfig":"43"},{"size":228,"mtime":1612899877232,"results":"52","hashOfConfig":"43"},{"size":1992,"mtime":1613011127220,"results":"53","hashOfConfig":"43"},{"size":1461,"mtime":1612989716887,"results":"54","hashOfConfig":"43"},{"size":2856,"mtime":1613001271322,"results":"55","hashOfConfig":"43"},{"size":197,"mtime":1612367854350,"results":"56","hashOfConfig":"43"},{"size":3693,"mtime":1613013101118,"results":"57","hashOfConfig":"43"},{"size":2678,"mtime":1612901263459,"results":"58","hashOfConfig":"43"},{"size":594,"mtime":1612992523715,"results":"59","hashOfConfig":"43"},{"size":391,"mtime":1612988547227,"results":"60","hashOfConfig":"43"},{"size":445,"mtime":1612899969602,"results":"61","hashOfConfig":"43"},{"size":2285,"mtime":1612470174854,"results":"62","hashOfConfig":"43"},{"size":1338,"mtime":1612468981295,"results":"63","hashOfConfig":"43"},{"size":1603,"mtime":1612890314261,"results":"64","hashOfConfig":"43"},{"size":5603,"mtime":1612993196075,"results":"65","hashOfConfig":"43"},{"size":223,"mtime":1612993203918,"results":"66","hashOfConfig":"43"},{"size":5325,"mtime":1612988967015,"results":"67","hashOfConfig":"43"},{"size":672,"mtime":1612986640957,"results":"68","hashOfConfig":"43"},{"size":261,"mtime":1612554930772,"results":"69","hashOfConfig":"43"},{"size":4093,"mtime":1613016378385,"results":"70","hashOfConfig":"43"},{"size":245,"mtime":1612746492881,"results":"71","hashOfConfig":"43"},{"size":202,"mtime":1612746450226,"results":"72","hashOfConfig":"43"},{"size":5574,"mtime":1613017518428,"results":"73","hashOfConfig":"43"},{"size":5828,"mtime":1612999407547,"results":"74","hashOfConfig":"43"},{"size":85,"mtime":1612798979402,"results":"75","hashOfConfig":"43"},{"size":208,"mtime":1612800409181,"results":"76","hashOfConfig":"43"},{"size":4581,"mtime":1612977984470,"results":"77","hashOfConfig":"43"},{"size":768,"mtime":1612984925627,"results":"78","hashOfConfig":"43"},{"size":260,"mtime":1612988992991,"results":"79","hashOfConfig":"43"},{"size":244,"mtime":1612988273149,"results":"80","hashOfConfig":"43"},{"size":188,"mtime":1612988644464,"results":"81","hashOfConfig":"43"},{"size":232,"mtime":1612989066118,"results":"82","hashOfConfig":"43"},{"size":3392,"mtime":1613012323326,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"mjj1m2",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/index.js",[],["180","181"],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/App.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reportWebVitals.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Navbar.js",["182","183","184","185","186"],"import React from 'react';\nimport 'semantic-ui-css/semantic.min.css'\nimport { Divider, Grid, Menu } from \"semantic-ui-react\";\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { logoutUser } from '../actions/auth'\nimport \"semantic-ui-css/semantic.min.css\";\nimport SearchBar from './SearchBar'\nimport history from \"../history\";\n\n\n\nimport {\n  Button,\n  Container,\n  Dropdown,\n\n  Header,\n  Icon,\n\n  Message\n} from \"semantic-ui-react\";\n\n\n\nclass Navbar extends React.Component{\n\n    handleSignOut = () => {\n      localStorage.removeItem('jwt_token')\n        this.props.logoutUser()\n    }\n\n    render(){\n        return(\n\n<div className=\"App\">\n  { this.props.currentUser ? \n        <Grid padded className=\"tablet computer only\" >\n          <Menu borderless fluid fixed=\"top\" size=\"huge\" >\n            <Container>\n            <Link to='/home'>\n              <Menu.Item style={{marginTop: '10px'}} active as=\"a\" >\n                Home\n              </Menu.Item>\n              </Link>\n              <Link to='/myWeightJourney'>\n              <Menu.Item as=\"a\" style={{marginTop: '10px'}} >My Weight Journey</Menu.Item>\n              </Link>\n              <Link to='/myDiaries'>\n              <Menu.Item as=\"a\" style={{marginTop: '10px'}} >My Diaries</Menu.Item>\n              </Link>\n              <Link to='/myHabits'>\n              <Menu.Item as=\"a\" style={{marginTop: '10px'}} >My Habits</Menu.Item>\n              </Link>\n              <Menu.Menu position=\"right\">\n              <Link to='/recipes'>\n                <Menu.Item as=\"a\" style={{marginTop: '10px'}} >Recipes</Menu.Item>\n                </Link>\n                <Menu.Item>\n             <SearchBar history={history}/>\n           </Menu.Item>\n                <Dropdown item text=\"Account\">\n                <Dropdown.Menu>\n                <Link to='/account_info'>\n                  <Dropdown.Item as=\"a\" >\n                    Settings\n                  </Dropdown.Item>\n                  </Link>\n                  <Link to='/'>\n                  <Dropdown.Item as=\"a\" onClick={this.handleSignOut}>\n                    Sign Out\n                  </Dropdown.Item>\n                  </Link>\n                </Dropdown.Menu>\n              </Dropdown>\n             \n              </Menu.Menu>\n            </Container>\n          </Menu>\n        </Grid>\n        :\n        null }\n</div>\n     \n\n        )\n    }\n\n} \n\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.currentUser\n    }\n}\n\nconst mapDispatchToProps = {\n    logoutUser: logoutUser\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/index.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/currentUser.js",["187"],"const currentUser = (state = null, action) => {\n  let updatedUser;\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n    case \"CURRENT_USER\":\n      return {\n        id: action.user.id,\n        email: action.user.email,\n        name: action.user.name,\n        password: action.user.password,\n      };\n    case \"LOGOUT_USER\":\n      return null;\n    case \"CREATE_USER\":\n      return {\n        id: action.user.id,\n        email: action.user.email,\n        name: action.user.name,\n        password: action.user.password,\n      };\n    case \"EDIT_USER\":\n      return {\n        ...action.user,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default currentUser;\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/auth.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/LoginForm.js",["188"],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RegisterForm.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/users.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/LandingPage.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/HomePage.js",["189"],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Diaries.js",["190","191","192","193","194"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport ExerciseEntriesContainer from \"./ExerciseEntriesContainer\";\nimport {\n  Divider,\n  Header,\n  Image,\n  Grid,\n  Segment,\n  Form,\n  Input,\n  Label,\n} from \"semantic-ui-react\";\nimport NetCalories from \"./NetCalories\";\nimport MealEntriesContainer from \"./MealEntriesContainer\";\n\n\n\nclass Diaries extends React.Component {\n\n    constructor(){\n        super()\n        let today = new Date();\n        let dd = today.getDate()\n        let mm = today.getMonth()+1\n        let yyyy = today.getFullYear()\n        if(dd<10){\n            dd = '0'+dd\n        }\n        if(mm<10){\n            mm='0'+mm\n        }\n        const updatedDate = `${yyyy}-${mm}-${dd}`;\n        this.state={\n            date: updatedDate\n        }\n    }\n\n\nhandleChange = (e) => {\n    this.setState({\n        [e.target.name]: e.target.value\n    })\n//     let total;\n//     let updatedCalories;\n//     const entries = (this.props.mealEntries.filter(entry => entry.date === this.state.date))\n//     let calories = entries.map(entry => {\n//         return entry.calories\n//     })\n//     if (calories.length === 0){\n//          updatedCalories = 0\n//     } else {\n//        updatedCalories = calories.map(entry => {\n//            return entry})\n// }\n//     console.log(calories)\n//     if (updatedCalories.length > 0){\n//         const mealCals = updatedCalories.reduce((a, b) => a + b, 0).toFixed(2)\n//         this.props.totalMealCals(mealCals)\n//         return mealCals\n//     } else {\n//         return total = 0\n//     }\nconst netCals = ((parseInt(this.props.mealCalories)) - (this.props.exerciseCalories)).toFixed(2)\nconsole.log(netCals)\n}\n\n\n  render() {\n\n\nconst netCals = ((parseInt(this.props.mealCalories)) - (this.props.exerciseCalories)).toFixed(2)\n\n    return (\n      <div\n        style={{ marginTop: \"80px\", marginBottom: \"80px\", textAlign: \"center\" }}\n      >\n        <Segment definition>\n          <Header as=\"h3\">\n           \n                \n              <Form>\n              <Input\n              type='date'\n              name= 'date'\n              value={this.state.date}\n              onChange={this.handleChange}>\n              </Input>\n            </Form>\n          </Header>\n          <Divider section />\n\n          <Header as=\"h3\">Meals</Header>\n          <MealEntriesContainer date={this.state.date}/>\n\n          <Divider section />\n\n          <Header as=\"h3\">Activities</Header>\n          <ExerciseEntriesContainer date={this.state.date} />\n          <Divider section />\n  <Header as=\"h3\">Net Calories: {}</Header>\n        </Segment>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n      mealCalories: state.mealCalories,\n      exerciseCalories: state.exerciseCalories,\n      mealEntries: state.mealEntries\n    };\n  };\n\nexport default connect(mapStateToProps)(Diaries);\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Habits.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RecipesContainer.js",["195"],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/AccountInfo.js",["196","197"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport 'semantic-ui-css/semantic.min.css' \nimport { Form, Input } from 'semantic-ui-react'\nimport { editUser } from '../actions/users'\n\nclass AccountInfo extends React.Component{\n  \nconstructor(props){\n    super(props)\n    this.state={\n        name: props.currentUser.name ,\n        email: props.currentUser.email ,\n        password: '',\n        error: ''\n    }\n}\nhandleChange = (e) => {\n    this.setState({\n        [e.target.name]: e.target.value\n    })\n}\n\nhandleSubmit = (e) => {\n    e.preventDefault()\n    const {id} = this.props.currentUser\n    const reqObj = {\n        method: 'PATCH',\n        headers: {\n        'Content-Type': 'application/json'\n        },\n        body:  JSON.stringify({\n            email: this.state.email,\n            name: this.state.name,\n            password: this.state.password\n          })\n    }\n    fetch(`http://localhost:3000/users/${id}`, reqObj)\n    .then(resp => resp.json())\n    .then(updatedUser => {\n        if (updatedUser.error){\n            this.setState({\n                error: updatedUser.error\n            })\n        } else {\n            this.props.editUser(updatedUser)\n            this.props.history.push('/home')\n        }\n    })\n}\n    render(){\n       \n        const { name, email } = this.props.currentUser\n        return (\n            <div>\n            { this.state.error ? <h4 style={{color: 'red'}}>{this.state.error}</h4> : null}\n            <Form  className='loginform' widths='equal' onSubmit={this.handleSubmit} style={{textAlign: 'left'}}>\n            <h1>Account Info</h1>\n            <br></br>\n           <Form.Field >\n            <label>Name</label>\n            <Input \n            name='name' \n            value={this.state.name}\n            onChange={this.handleChange}\n            />\n            </Form.Field>\n            <Form.Field >\n            <label>Email</label>\n            <Input \n            name='email' \n            value={this.state.email}\n            onChange={this.handleChange}\n            />\n            </Form.Field>\n            <Form.Field >\n            <label>Password confirmation</label>\n            <Input \n            name='password' \n            value={this.state.password}\n            onChange={this.handleChange}\n            />\n            </Form.Field>\n            <Form.Button content='Save changes' />\n            <Form.Button content='Cancel' />\n        </Form>\n      \n</div>\n\n        )}\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.currentUser\n    }\n}\n\nconst mapDispatchToProps = {\n    editUser: editUser\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountInfo);","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/weightEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/mealEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/exerciseEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/weightEntriesContainer.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/weightEntry.js",["198"],"import React from 'react'\nimport { connect } from 'react-router-dom'\n\nclass weightEntry extends React.Component{\n\n    render(){\n        return(\n            <div>\n                Hi\n                <p>{this.props.weightEntry.weight}</p>\n                <p>{this.props.weightEntry.date}</p>\n            </div>\n        )\n    }\n}\n\nexport default weightEntry",["199","200"],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/WeightEntry.js",["201"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { deleteEntry } from '../actions/weightEntries'\n\nclass WeightEntry extends React.Component{\n\n\n    handleDelete = () => {\n        const { id } = this.props.entry\n        fetch(`http://localhost:3000/weight_entries/${id}`, {\n            method: 'DELETE'\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            this.props.deleteEntry(id)\n        })\n    }\n\n    render(){\n        const { weight, date, id } = this.props.entry\n        \n        const year = date.toString().slice(0, 4)\n        const month = date.toString().slice(5,7)\n        const day = date.toString().slice(8,10)\n        const updatedDate = `${month}/${day}/${year}`\n        return(\n            <div >\n            <table className=\"ui table\">\n            <tbody>\n                <tr style={{\n                    textAlign: 'left',\n                    position: 'relative'\n                }}>\n                <td>{updatedDate}</td>\n                <td >{weight} lbs</td>\n               <td><button  className=\"ui button\" onClick={() => this.handleDelete(this.props.entry.id)} style={{\n                   float: 'right'\n               }}>\n                   Delete\n                   </button></td>\n                </tr>\n            </tbody>\n            </table>\n            </div>\n            \n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    deleteEntry: deleteEntry\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.currentUser\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeightEntry)","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/WeightEntriesContainer.js",["202","203"],"import React from \"react\";\nimport WeightEntry from \"./WeightEntry\";\nimport { connect } from \"react-redux\";\nimport { createEntry } from \"../actions/weightEntries\";\nimport { Button, Form, Input } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { currentUser } from \"../actions/auth\";\n\nclass WeightEntriesContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      weight: \"\",\n      date: \"\",\n      addWeight: true,\n      error: \"\",\n    };\n  }\n\n\n\n  toggleAddWeight = () => {\n    this.setState({\n      addWeight: !this.state.addWeight,\n    });\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const updatedDate = this.state.date.replace(\"-\", \"\").replace(\"-\", \"\");\n    const updatedWeight = parseFloat(this.state.weight);\n    const reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        weight: updatedWeight,\n        date: updatedDate,\n        user_id: this.props.currentUser.id,\n      }),\n    };\n    fetch(\"http://localhost:3000/weight_entries\", reqObj)\n      .then((resp) => resp.json())\n      .then((newEntry) => {\n        if (newEntry.error) {\n          this.setState({\n            error: newEntry.error,\n          });\n        } else {\n          this.toggleAddWeight();\n          this.props.createEntry(newEntry);\n          this.props.history.push(\"/myWeightJourney\");\n          this.setState({\n            weight: \"\",\n            date: \"\",\n            error: \"\",\n          });\n        }\n      });\n  };\n\n  renderTotal = () => {\n    let total;\n    let weights = this.props.weightEntries.map((entry) => {\n      return entry.weight;\n    });\n    if (weights.length > 0) {\n      const a = weights[0];\n      const b = weights[weights.length - 1];\n      return (total = (a - b).toFixed(1));\n    } else {\n      return (total = 0);\n    }\n  };\n\n  render() {\n\n    return (\n      <div>\n        <h1\n          style={{\n            paddingTop: \"20px\",\n            paddingBottom: \"20px\",\n            marginLeft: \"20%\",\n          }}\n        >\n          My Weight Journey\n        </h1>\n        <div>\n          <table\n            className=\"ui table\"\n            style={{\n              maxWidth: \"600px\",\n              marginLeft: \"10%\",\n            }}\n          >\n            <thead>\n              <tr>\n                <th>Date</th>\n                <th>Weight</th>\n              </tr>\n            </thead>\n          </table>\n          <div\n            style={{\n              bottom: \"0\",\n              maxHeight: \"300px\",\n              width: \"600px\",\n              overflowY: \"scroll\",\n              padding: \"none\",\n              marginLeft: \"10%\",\n            }}\n          >\n            {this.props.weightEntries.map((entry) => {\n              return <WeightEntry entry={entry} key={entry.id} />;\n            })}\n          </div>\n          <table\n            className=\"ui table\"\n            style={{\n              maxWidth: \"600px\",\n              marginLeft: \"10%\",\n            }}\n          >\n            <thead>\n              <tr style={{ paddingLeft: \"100px\" }}>\n                {this.state.addWeight ? (\n                  <Button\n                    onClick={() => this.toggleAddWeight()}\n                    className=\"ui button\"\n                    style={{ margin: \"20px\", textAlign: \"center\" }}\n                  >\n                    Add weight\n                  </Button>\n                ) : (\n                  <td>\n                    <Form>\n                      <Input\n                        type=\"date\"\n                        name=\"date\"\n                        value={this.state.date}\n                        onChange={this.handleChange}\n                      ></Input>\n                      <Input\n                        type=\"number\"\n                        name=\"weight\"\n                        value={this.state.weight}\n                        onChange={this.handleChange}\n                        placeholder=\"weight\"\n                        style={{ display: \"inline\", width: \"100px\" }}\n                      ></Input>\n                      <Button\n                        type=\"button\"\n                        onClick={this.handleSubmit}\n                        className=\"ui blue button\"\n                        style={{ float: \"left\", display: \"flex\" }}\n                      >\n                        Submit\n                      </Button>\n                      <Button\n                        type=\"button\"\n                        onClick={this.toggleAddWeight}\n                        className=\"ui button\"\n                        style={{ float: \"right\", display: \"flex\" }}\n                      >\n                        Cancel\n                      </Button>\n                    </Form>\n                  </td>\n                )}\n              </tr>\n              <tr>\n                <th>Total weight lost</th>\n\n                <th\n                  style={{\n                    paddingRight: \"200px\",\n                  }}\n                  id=\"total-weight\"\n                >\n                  {this.renderTotal()} lbs\n                </th>\n              </tr>\n            </thead>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    weightEntries: state.weightEntries,\n    currentUser: state.currentUser,\n  };\n};\n\nconst mapDispatchToProps = {\n  createEntry: createEntry\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WeightEntriesContainer);\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/weightEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/ExerciseEntriesContainer.js",["204"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport ExerciseEntry from \"./ExerciseEntry\";\nimport { Table } from \"semantic-ui-react\";\nimport { Button, Form, Input } from \"semantic-ui-react\";\nimport { createEntry, totalExerciseCals } from \"../actions/exerciseEntries\";\n\nclass WeightEntriesContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      addExercise: true,\n      category: \"\",\n      duration: \"\",\n      calories_burned: \"\",\n      error: \"\"\n    };\n  }\n\n  toggleAddExercise = () => {\n    this.setState({\n      addExercise: !this.state.addExercise,\n    });\n  };\n\n\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const category = this.state.category;\n    const duration = this.state.duration;\n    const calories_burned = this.state.calories_burned;\n    const reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        category: category,\n        duration: duration,\n        calories_burned: calories_burned,\n        user_id: this.props.currentUser.id,\n      }),\n    };\n    fetch(\"http://localhost:3000/exercise_entries\", reqObj)\n      .then((resp) => resp.json())\n      .then((newEntry) => {\n        if (newEntry.error) {\n          this.setState({\n            error: newEntry.error,\n          });\n        } else {\n          this.toggleAddExercise();\n          this.props.createEntry(newEntry);\n        }\n        this.setState({\n            category: \"\",\n            duration: \"\",\n            calories_burned: \"\"\n        })\n      });\n  };\n\n  renderTotal = () => {\n    let total;\n    let date = parseInt(this.props.date.replace('-', '').replace('-', ''))\n    const entries = this.props.exerciseEntries.filter(entry => entry.date === date)\n    let calories = entries.map((entry) => {\n      return entry.calories_burned\n    });\n    const updatedCalories = (calories.map(entry => {\n        if(entry===undefined){\n            return 0\n        } else {\n            return entry\n        }\n    }))\n    if (updatedCalories.length > 0) {\n      const exerciseCals = updatedCalories.reduce((a, b) => a + b, 0);\n      this.props.totalExerciseCals(exerciseCals)\n      return exerciseCals\n    } else {\n      return (total = 0);\n    }\n  };\n  render() {\n    let date = parseInt(this.props.date.replace('-', '').replace('-', ''))\n    const entries = this.props.exerciseEntries.filter(entry => entry.date === date)\n    const myEntry = entries.map(entry => <ExerciseEntry entry={entry} key={entry.id} />)\n    return (\n      <div>\n    { this.state.error ? <h4 style={{color: 'red'}}>{this.state.error}</h4> : null}\n\n        <Table singleLine >\n          <Table.Header>\n            <Table.Row >\n              <Table.HeaderCell>Activity Type</Table.HeaderCell>\n              <Table.HeaderCell>Duration </Table.HeaderCell>\n              <Table.HeaderCell >Calories Burned</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          {myEntry}\n          <Table.Row >\n            <Table.Cell>Total Calories Burned</Table.Cell>\n            <Table.Cell></Table.Cell>\n            <Table.Cell >{this.renderTotal()} </Table.Cell>\n          </Table.Row>\n        </Table>\n    \n          {this.state.addExercise ? (\n            <Button\n              onClick={() => this.toggleAddExercise()}\n              \n            >\n              Add\n            </Button>\n          ) : (\n         \n              <Form >\n                <Input\n                style={{display: 'block'}}\n                  type=\"text\"\n                  name=\"category\"\n                  value={this.state.category}\n                  onChange={this.handleChange}\n                  placeholder=\"activity type\"\n                ></Input>\n     \n                <Input\n           style={{display: 'block'}}\n                  type=\"number\"\n                  name=\"duration\"\n                  value={this.state.duration}\n                  onChange={this.handleChange}\n                  placeholder=\"duration (min)\"\n                ></Input>\n                <Input\n                 style={{display: 'block'}}\n                  type=\"number\"\n                  name=\"calories_burned\"\n                  value={this.state.calories_burned}\n                  onChange={this.handleChange}\n                  placeholder=\"calories burned\"\n                ></Input>\n                <Button\n                  type=\"button\"\n                  onClick={this.handleSubmit}\n                  className=\"ui blue button\"\n                >\n                  Submit\n                </Button>\n                <Button\n                  type=\"button\"\n                  onClick={this.toggleAddExercise}\n                  className=\"ui button\"\n                >\n                  Cancel\n                </Button>\n              </Form>\n         \n          )}\n   \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n    exerciseEntries: state.exerciseEntries,\n  };\n};\n\nconst mapDispatchToProps = {\n  createEntry: createEntry,\n  totalExerciseCals: totalExerciseCals\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WeightEntriesContainer);\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/ExerciseEntry.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/NetCalories.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Recipes.js",["205","206"],"import React from \"react\";\nimport { Button, Grid } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport RecipeCard from \"./RecipeCard\";\nimport { findRecipes, viewRecipe } from \"../actions/recipes\";\n\nclass Recipes extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      intervalId: 0\n    };\n  }\n\n  componentDidMount(){\n\n    const query = this.props.match.params.category\n      if(this.props.recipes.length === 0){\n        fetch(`https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/searchComplex?limitLicense=true&offset=0&number=25&query=${query}`, {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-key\": \"d6d30feb34msh027ba22c7ad5d85p111652jsn5e503987bf98\",\n                \"x-rapidapi-host\": \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\"\n            }\n        })\n        .then(resp => resp.json())\n        .then(recipesArr => {\n            const recipes = recipesArr.results.map(recipe => {\n                return recipe\n            })\n            this.props.findRecipes(recipes)\n        })\n      }\n  }\n\n  handleClick = (id) => {\n    fetch(\n      `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/${id}/information`,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"d6d30feb34msh027ba22c7ad5d85p111652jsn5e503987bf98\",\n          \"x-rapidapi-host\":\n            \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\",\n        },\n      }\n    )\n      .then((resp) => resp.json())\n      .then((recipeInfo) => {\n        this.props.viewRecipe(recipeInfo);\n        this.props.history.push(`/show_recipes/${id}`);\n      });\n  };\n\n\n  renderCard = (recipe) => {\n    const { title, image, id } = recipe;\n    return (\n      <Card\n        onClick={() => this.handleClick(id)}\n  \n        style={{\n          padding: \"10px\",\n          height: '70vh',\n          width: '27vw',\n          margin: \"1vh\",\n        }}\n      >\n        <Image\n          src={image}\n          wrapped\n          ui={false}\n          style={{\n            height: \"auto\",\n            width: \"auto\",\n          }}\n        />\n        <Card.Content>\n          <Card.Header style={{fontFamily: 'sans-serif', fontWeight: 'lighter'}}>{title}</Card.Header>\n        {/* <p>{}recipe.calories</p> */}\n        </Card.Content>\n      </Card>\n    );\n  };\n\n  scrollStep = () => {\n    if (window.pageYOffset === 0) {\n      clearInterval(this.state.intervalId);\n    }\n    window.scroll(0, window.pageYOffset - this.props.scrollStepInPx);\n  };\n\n  scrollToTop = () => {\n    let intervalId = setInterval(\n      this.scrollStep.bind(this),\n      this.props.delayInMs\n    );\n    this.setState({ intervalId: intervalId });\n  };\n\n  render() {\n    return (\n      <div>\n      \n      <Button\n          onClick={() => this.props.history.goBack()}\n          style={{marginTop: '12vh', marginBottom: '0px', marginLeft: '3vh', float:'left'}}\n        >\n          Back To All Categories\n        </Button>\n        <br></br>\n        <br></br>\n        <br></br>\n        <div\n          style={{\n            paddingLeft: '9%',\n            paddingTop: \"100px\"\n          }}\n        >\n      \n          <Grid >\n            <Grid.Row >\n              {this.props.recipes.map((recipe) => {\n                return this.renderCard(recipe);\n              })}\n            </Grid.Row>\n          </Grid>\n          <Button\n            style={{\n              float: \"right\",\n              marginBottom: \"10px\",\n              marginRight: \"10px\",\n              padding: \"20px\",\n            }}\n            icon=\"angle double up\"\n            title=\"Back to top\"\n            className=\"scroll\"\n            onClick={() => {\n              this.scrollToTop();\n            }}\n          ></Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    recipes: state.recipes,\n  };\n};\n\nconst mapDispatchToProps = {\n  viewRecipe: viewRecipe,\n  findRecipes: findRecipes\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Recipes);\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/recipes.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/recipes.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RecipeCard.js",["207","208","209"],"import React from \"react\";\nimport { Button, Grid, Card, Icon, Image, ModalDescription } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { viewRecipe } from \"../actions/recipes\";\n\n\nclass RecipeCard extends React.Component {\n\n    constructor(){\n        super()\n        this.state = {\n            calories: '',\n            carbs: '',\n            fat: '',\n            protein: ''\n        }\n    }\n//// grab id from url and redo fetch\n    componentDidMount(){\n       const id = parseInt(this.props.match.params.id)\n        if(!this.props.recipe){\n        fetch(\n            `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/${id}/information`,\n            {\n              method: \"GET\",\n              headers: {\n                \"x-rapidapi-key\":\n                  \"d6d30feb34msh027ba22c7ad5d85p111652jsn5e503987bf98\",\n                \"x-rapidapi-host\":\n                  \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\",\n              }\n            }\n          )\n          .then((resp) => resp.json())\n          .then((recipeInfo) => {\n            this.props.viewRecipe(recipeInfo);\n          });\n    }\n}\n\n  renderNutrition = (id) => {\n    fetch(\n      `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/${id}/nutritionWidget.json`,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"d6d30feb34msh027ba22c7ad5d85p111652jsn5e503987bf98\",\n          \"x-rapidapi-host\":\n            \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\",\n        }\n      }\n    )\n    .then(resp => resp.json())\n    .then(nutritionInfo => {\n        this.setState({\n            calories: nutritionInfo.calories,\n            carbs: nutritionInfo.carbs,\n            fat: nutritionInfo.fat,\n            protein: nutritionInfo.protein\n        })\n    })\n  };\n  render() {\n    const {\n      id,\n      image,\n      analyzedInstructions,\n      title,\n      extendedIngredients,\n      servings,\n      readyInMinutes,\n    } = this.props.recipe;\n\n\n    return (\n      <div >\n        <div>\n          <div >\n            <div >\n                <Button  onClick={()=>this.props.history.goBack()}  \n                style={{marginTop: \"12vh\", marginBottom: '0px', marginLeft: '3vh', float: 'left'}}>Back To All Recipes</Button>\n              <div style={{ paddingTop: '120px', textAlign: 'center'}}>\n              <Grid > \n                <Grid.Row>\n              <p style={{marginLeft:'28%'}}>{title} </p>\n              \n              <Image\n                src={image}\n                style={{\n                  paddingLeft: '2vh',\n                  display: 'block',\n                  marginLeft: 'auto',\n                  marginRight: 'auto'\n                }}\n              />\n              \n              </Grid.Row>\n              <Grid.Row style={{display: 'block', marginLeft: '90vh'}}>\n              <div style={{  border: '2px solid black', textAlign:'center', width:'300px', backgroundColor: 'white', color: 'black', }}>\n            <p>Total Time: {readyInMinutes} min</p>\n            <p>servings: {servings}</p>\n           \n              </div>\n              </Grid.Row>\n              <br></br>\n              \n              </Grid>\n              </div>\n            \n            \n\n            <div class=\"ui hidden divider\"></div>\n            <div class=\"ui grid\">\n              <div class=\"two column row\">\n                <div class=\"column\">\n                  <h1 style={{ marginRight:'400px', fontSize:'25px' }} class=\"ui header\">Ingredients</h1>\n                  <p>\n                    <ul style={{ textAlign: \"left\", fontSize:'20px' }}>\n                      {extendedIngredients.map((ing) => {\n                        return <li>{ing.original}</li>;\n                      })}\n                    </ul>\n                  </p>\n                </div>\n                <div class=\"column\">\n                  <h1 style={{ marginRight:'400px', fontSize:'25px' }} class=\"ui header\">Directions</h1>\n                  <p>\n                    <ol style={{ textAlign: \"left\", fontSize:'20px'  }}>\n                      {analyzedInstructions[0] ? \n                      analyzedInstructions[0].steps.map((step) => {\n                        return <li>{step.step}</li>;\n                      }) : \n                        <li>Sorry, but at this time we are still gathering the directions.</li>\n                    }\n                    </ol>\n                  </p>\n                </div>\n              </div>\n              <div >\n                <div class=\"column\" style={{marginLeft:'50px'}}>\n                  <h1 style={{  fontSize:'25px' }} class=\"ui header\">Nutrion Facts</h1>\n                  <p>{this.renderNutrition(id)}</p>\n                    <h3 style={{  fontSize:'20px', fontFamily: \"serif\" }} >Calories: {this.state.calories}</h3>\n                    <h3 style={{  fontSize:'20px', fontFamily: \"serif\" }}>Carbs: {this.state.carbs}</h3>\n                    <h3 style={{  fontSize:'20px', fontFamily: \"serif\" }}>Fat: {this.state.fat}</h3>\n                    <h3 style={{  fontSize:'20px', fontFamily: \"serif\" }}>Protein: {this.state.protein}</h3>\n                </div>\n              </div>\n            </div>\n            <div class=\"ui hidden divider\"></div>\n            <div class=\"ui divider\"></div>\n          </div>\n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    recipe: state.recipe,\n  };\n};\n\nconst mapDispatchToProps = {\n    viewRecipe: viewRecipe\n  };\n  \n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeCard);\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/MealEntriesContainer.js",["210","211"],"import React from \"react\";\nimport { Table, Button, Form, Input } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport MealEntry from \"./MealEntry\";\nimport { createEntry, totalMealCals } from \"../actions/mealEntries\";\n\n\n\nclass MealEntriesContainer extends React.Component {\n  \n  constructor() {\n    \n    super();\n\n    this.state = {\n      name: '',\n      fat: '',\n      carbs: '',\n      protein: '',\n      calories: '',\n      addMeal: true,\n      error: ''\n    };\n  }\n\n  toggleAddMeal = () => {\n    this.setState({\n      addMeal: !this.state.addMeal,\n    });\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n  \n    const updatedDate = this.props.date\n    const name = this.state.name;\n    const fat = this.state.fat;\n    const carbs = this.state.carbs;\n    const protein = this.state.protein;\n    const calories = this.state.calories;\n    const reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: name,\n        fat: fat,\n        carbs: carbs,\n        protein: protein,\n        calories: calories,\n        user_id: this.props.currentUser.id,\n        date: updatedDate\n      }),\n    };\n    fetch(\"http://localhost:3000/meal_entries\", reqObj)\n      .then((resp) => resp.json())\n      .then((newEntry) => {\n        console.log(newEntry)\n        if (newEntry.error) {\n          this.setState({\n            error: newEntry.error,\n          });\n        } else {\n          this.toggleAddMeal();\n          this.props.createEntry(newEntry);\n        }\n        this.setState({\n            name: '',\n            fat: '',\n            carbs: '',\n            protein: '',\n            calories: '',\n        })\n      });\n  };\n\n  renderTotal = () => {\n    let total;\n    let date = parseInt(this.props.date.replace('-', '').replace('-', ''))\n    const entries = this.props.mealEntries.filter(entry => entry.date === date)\n    let calories = entries.map((entry) => {\n      return entry.calories\n    });\n    const updatedCalories = (calories.map(entry => {\n      if(entry===undefined){\n          return 0\n      } else {\n          return entry\n      }\n  }))\n  if (updatedCalories.length > 0) {\n    const mealCals = updatedCalories.reduce((a, b) => a + b, 0).toFixed(2)\n    this.props.totalMealCals(mealCals)\n    return mealCals\n  } else {\n    return (total = 0);\n  }\n  console.log(updatedCalories)\n  }\n\n  render() {\n    let date = parseInt(this.props.date.replace('-', '').replace('-', ''))\nconst entries = this.props.mealEntries.filter(entry => entry.date === date)\nconst myEntry = entries.map(entry => <MealEntry entry={entry} key={entry.id} />)\n    return (\n      <div>\n                  { this.state.error ? <h4 style={{color: 'red'}}>{this.state.error}</h4> : null}\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Name</Table.HeaderCell>\n              <Table.HeaderCell>Fat (g)</Table.HeaderCell>\n              <Table.HeaderCell>Carbs (g)</Table.HeaderCell>\n              <Table.HeaderCell>Protein (g)</Table.HeaderCell>\n              <Table.HeaderCell>Calories</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          {myEntry}\n    \n          <Table.Row >\n            <Table.Cell>Total Calories Burned</Table.Cell>\n            <Table.Cell></Table.Cell>\n            <Table.Cell></Table.Cell>\n            <Table.Cell></Table.Cell>\n            <Table.Cell>{this.renderTotal()} </Table.Cell>\n          </Table.Row>\n        </Table>\n      \n        {this.state.addMeal ? \n              <Button\n              style={{ marginLeft: \"25px\" }}\n              onClick={this.toggleAddMeal}\n            >\n              Add\n            </Button>\n            :\n            <Form>\n            <Input\n             style={{display: 'block'}}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              placeholder=\"Meal Name\"\n            ></Input>\n            <Input\n             style={{display: 'block'}}\n              type=\"number\"\n              name=\"fat\"\n              value={this.state.fat}\n              onChange={this.handleChange}\n              placeholder=\"fat\"\n            ></Input>\n            <Input\n             style={{display: 'block'}}\n              type=\"number\"\n              name=\"carbs\"\n              value={this.state.carbs}\n              onChange={this.handleChange}\n              placeholder=\"carbs\"\n            ></Input>\n             <Input\n              style={{display: 'block'}}\n              type=\"number\"\n              name=\"protein\"\n              value={this.state.protein}\n              onChange={this.handleChange}\n              placeholder=\"protein\"\n            ></Input>\n             <Input\n              style={{display: 'block'}}\n              type=\"number\"\n              name=\"calories\"\n              value={this.state.calories}\n              onChange={this.handleChange}\n              placeholder=\"calories\"\n            ></Input>\n            <Button\n              type=\"button\"\n              onClick={this.handleSubmit}\n              className=\"ui blue button\"\n            >\n              Submit\n            </Button>\n            <Button\n              type=\"button\"\n              onClick={this.toggleAddMeal}\n              className=\"ui button\"\n            >\n              Cancel\n            </Button>\n          </Form>\n        \n    }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n    mealEntries: state.mealEntries,\n  };\n};\n\nconst mapDispatchToProps = {\n    createEntry: createEntry,\n    totalMealCals: totalMealCals\n  };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MealEntriesContainer);\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/history/index.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/viewRecipe.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/SearchBar.js",["212","213","214","215"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dropdown, Form, Input } from \"semantic-ui-react\";\nimport { Divider, Grid, Menu } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { viewRecipe } from \"../actions/recipes\";\nimport { withRouter } from 'react-router-dom'\n\nclass SearchBar extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      keyword: \"\",\n      showOptions: false,\n      results: [],\n    };\n  }\n\n  toggleOptions = () => {\n    this.setState({\n      showOptions: !this.state.showOptions,\n    });\n  };\n\n  handleChange = (e, ) => {\n    this.setState({\n      keyword: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const query = this.state.keyword;\n    console.log(query)\n\n    fetch(\n      `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/search?query=${query}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"d6d30feb34msh027ba22c7ad5d85p111652jsn5e503987bf98\",\n          \"x-rapidapi-host\":\n            \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\",\n        },\n      }\n    )\n      .then((resp) => resp.json())\n      .then((recipeArr) => {\n        this.setState({\n          results: recipeArr.results,\n        });\n \n        this.toggleOptions();\n        \n      });\n  };\n\n  handleClick = (id) => {\n    fetch(\n      `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/${id}/information`,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"d6d30feb34msh027ba22c7ad5d85p111652jsn5e503987bf98\",\n          \"x-rapidapi-host\":\n            \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\",\n        },\n      }\n    )\n      .then((resp) => resp.json())\n      .then((recipeInfo) => {\n          console.log(recipeInfo)\n        this.props.viewRecipe(recipeInfo);\n        this.props.history.push(`/show_recipe/${id}`);\n      });\n  };\n\n// componentDidMount(){\n//     let initialResults = []\n//     fetch(\n//               `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/search?query=${query}`,\n//               {\n//                 method: \"GET\",\n//                 headers: {\n//                   \"x-rapidapi-key\":\n//                     \"d6d30feb34msh027ba22c7ad5d85p111652jsn5e503987bf98\",\n//                   \"x-rapidapi-host\":\n//                     \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\",\n//                 },\n//               }\n//             )\n//               .then((resp) => resp.json())\n//               .then((recipeArr) => {\n//                 this.setState({\n//                   results: recipeArr.results,\n//                 })\n                \n//               });\n\n// }\n\nrender() {\n    return (\n      <div className='SB' >\n        {this.props.currentUser ? (\n          <div >\n            <Form onSubmit={this.handleSubmit} >\n              <Input\n                icon=\"search\"\n                name=\"keyword\"\n                placeholder=\"Search\"\n                value={this.state.keyword}\n                onChange={this.handleChange}\n              />\n            </Form>\n            {this.state.showOptions ? (\n    \n              <ul \n                style={{\n                  width: \"250px\",\n                  height: \"250px\",\n                  backgroundColor: \"white\",\n                  overflowY: \"scroll\",\n                  listStyleType: \"none\",\n                  padding: \"7px\",\n                  textAlign: \"left\",\n                }}\n              >\n                 \n                {this.state.results.map((result) => {\n                  return (\n                    \n                    <li\n                    onClick={() => this.handleClick(result.id)}\n                    className='sb-options'\n                      style={{\n                        color: \"black\",\n                        fontSize: \"15px\",\n                        fontFamily: \"revert\",\n                        borderBottom: \"1px solid grey\",\n                        padding: \"10px\",\n                      }}\n                    >\n                      {result.title}\n                    </li>\n          \n                  );\n                })}\n\n              </ul>\n          \n            ) : null}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n  };\n};\n\nconst mapDispatchToProps = {\n    viewRecipe: viewRecipe,\n  };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SearchBar));\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/MealEntry.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/exerciseEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/mealEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/mealCalories.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/exerciseCalories.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/redoHP.js",["216","217","218","219","220"],{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":3,"column":10,"nodeType":"227","messageId":"228","endLine":3,"endColumn":17},{"ruleId":"225","severity":1,"message":"229","line":14,"column":3,"nodeType":"227","messageId":"228","endLine":14,"endColumn":9},{"ruleId":"225","severity":1,"message":"230","line":18,"column":3,"nodeType":"227","messageId":"228","endLine":18,"endColumn":9},{"ruleId":"225","severity":1,"message":"231","line":19,"column":3,"nodeType":"227","messageId":"228","endLine":19,"endColumn":7},{"ruleId":"225","severity":1,"message":"232","line":21,"column":3,"nodeType":"227","messageId":"228","endLine":21,"endColumn":10},{"ruleId":"225","severity":1,"message":"233","line":2,"column":7,"nodeType":"227","messageId":"228","endLine":2,"endColumn":18},{"ruleId":"225","severity":1,"message":"232","line":4,"column":23,"nodeType":"227","messageId":"228","endLine":4,"endColumn":30},{"ruleId":"225","severity":1,"message":"234","line":4,"column":10,"nodeType":"227","messageId":"228","endLine":4,"endColumn":17},{"ruleId":"225","severity":1,"message":"235","line":7,"column":3,"nodeType":"227","messageId":"228","endLine":7,"endColumn":8},{"ruleId":"225","severity":1,"message":"236","line":8,"column":3,"nodeType":"227","messageId":"228","endLine":8,"endColumn":7},{"ruleId":"225","severity":1,"message":"237","line":12,"column":3,"nodeType":"227","messageId":"228","endLine":12,"endColumn":8},{"ruleId":"225","severity":1,"message":"238","line":14,"column":8,"nodeType":"227","messageId":"228","endLine":14,"endColumn":19},{"ruleId":"225","severity":1,"message":"239","line":72,"column":7,"nodeType":"227","messageId":"228","endLine":72,"endColumn":14},{"ruleId":"225","severity":1,"message":"240","line":3,"column":8,"nodeType":"227","messageId":"228","endLine":3,"endColumn":15},{"ruleId":"225","severity":1,"message":"241","line":53,"column":17,"nodeType":"227","messageId":"228","endLine":53,"endColumn":21},{"ruleId":"225","severity":1,"message":"242","line":53,"column":23,"nodeType":"227","messageId":"228","endLine":53,"endColumn":28},{"ruleId":"225","severity":1,"message":"234","line":2,"column":10,"nodeType":"227","messageId":"228","endLine":2,"endColumn":17},{"ruleId":"221","replacedBy":"243"},{"ruleId":"223","replacedBy":"244"},{"ruleId":"225","severity":1,"message":"245","line":20,"column":31,"nodeType":"227","messageId":"228","endLine":20,"endColumn":33},{"ruleId":"225","severity":1,"message":"246","line":7,"column":10,"nodeType":"227","messageId":"228","endLine":7,"endColumn":21},{"ruleId":"225","severity":1,"message":"247","line":80,"column":15,"nodeType":"227","messageId":"228","endLine":80,"endColumn":20},{"ruleId":"225","severity":1,"message":"247","line":90,"column":15,"nodeType":"227","messageId":"228","endLine":90,"endColumn":20},{"ruleId":"225","severity":1,"message":"231","line":4,"column":16,"nodeType":"227","messageId":"228","endLine":4,"endColumn":20},{"ruleId":"225","severity":1,"message":"248","line":5,"column":8,"nodeType":"227","messageId":"228","endLine":5,"endColumn":18},{"ruleId":"225","severity":1,"message":"249","line":2,"column":24,"nodeType":"227","messageId":"228","endLine":2,"endColumn":28},{"ruleId":"225","severity":1,"message":"231","line":2,"column":30,"nodeType":"227","messageId":"228","endLine":2,"endColumn":34},{"ruleId":"225","severity":1,"message":"250","line":2,"column":43,"nodeType":"227","messageId":"228","endLine":2,"endColumn":59},{"ruleId":"225","severity":1,"message":"247","line":102,"column":13,"nodeType":"227","messageId":"228","endLine":102,"endColumn":18},{"ruleId":"251","severity":1,"message":"252","line":104,"column":3,"nodeType":"253","messageId":"254","endLine":104,"endColumn":31},{"ruleId":"225","severity":1,"message":"255","line":3,"column":10,"nodeType":"227","messageId":"228","endLine":3,"endColumn":18},{"ruleId":"225","severity":1,"message":"226","line":4,"column":10,"nodeType":"227","messageId":"228","endLine":4,"endColumn":17},{"ruleId":"225","severity":1,"message":"236","line":4,"column":19,"nodeType":"227","messageId":"228","endLine":4,"endColumn":23},{"ruleId":"225","severity":1,"message":"256","line":4,"column":25,"nodeType":"227","messageId":"228","endLine":4,"endColumn":29},{"ruleId":"225","severity":1,"message":"236","line":2,"column":18,"nodeType":"227","messageId":"228","endLine":2,"endColumn":22},{"ruleId":"225","severity":1,"message":"257","line":5,"column":8,"nodeType":"227","messageId":"228","endLine":5,"endColumn":21},{"ruleId":"225","severity":1,"message":"258","line":6,"column":8,"nodeType":"227","messageId":"228","endLine":6,"endColumn":20},{"ruleId":"225","severity":1,"message":"247","line":20,"column":15,"nodeType":"227","messageId":"228","endLine":20,"endColumn":20},{"ruleId":"225","severity":1,"message":"259","line":51,"column":13,"nodeType":"227","messageId":"228","endLine":51,"endColumn":25},"no-native-reassign",["260"],"no-negated-in-lhs",["261"],"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Header' is defined but never used.","'Icon' is defined but never used.","'Message' is defined but never used.","'updatedUser' is defined but never used.","'connect' is defined but never used.","'Image' is defined but never used.","'Grid' is defined but never used.","'Label' is defined but never used.","'NetCalories' is defined but never used.","'netCals' is assigned a value but never used.","'Recipes' is defined but never used.","'name' is assigned a value but never used.","'email' is assigned a value but never used.",["260"],["261"],"'id' is assigned a value but never used.","'currentUser' is defined but never used.","'total' is assigned a value but never used.","'RecipeCard' is defined but never used.","'Card' is defined but never used.","'ModalDescription' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'Dropdown' is defined but never used.","'Menu' is defined but never used.","'weightEntries' is defined but never used.","'mealCalories' is defined but never used.","'exerciseCals' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]