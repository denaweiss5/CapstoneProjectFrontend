[{"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/index.js":"1","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/App.js":"2","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reportWebVitals.js":"3","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Navbar.js":"4","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/index.js":"5","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/currentUser.js":"6","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/auth.js":"7","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/LoginForm.js":"8","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RegisterForm.js":"9","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/users.js":"10","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/LandingPage.js":"11","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/HomePage.js":"12","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Diaries.js":"13","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Habits.js":"14","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RecipesContainer.js":"15","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/AccountInfo.js":"16","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/weightEntries.js":"17","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/mealEntries.js":"18","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/exerciseEntries.js":"19","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/weightEntriesContainer.js":"20","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/weightEntry.js":"21","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/WeightEntry.js":"22","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/WeightEntriesContainer.js":"23","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/weightEntries.js":"24","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/ExerciseEntriesContainer.js":"25","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/ExerciseEntry.js":"26","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/NetCalories.js":"27","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Recipes.js":"28","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/recipes.js":"29","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/recipes.js":"30","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RecipeCard.js":"31","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/MealEntriesContainer.js":"32","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/history/index.js":"33","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/viewRecipe.js":"34","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/SearchBar.js":"35","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/MealEntry.js":"36","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/exerciseEntries.js":"37","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/mealEntries.js":"38","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/mealCalories.js":"39","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/exerciseCalories.js":"40","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/specificMeals.js":"41","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/specifiedMeals.js":"42","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/specificExercises.js":"43","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/specifiedExercises.js":"44","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Popup.js":"45","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/nutritionInfo.js":"46","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/LineGraph.js":"47"},{"size":635,"mtime":1612891601633,"results":"48","hashOfConfig":"49"},{"size":3001,"mtime":1613077946352,"results":"50","hashOfConfig":"49"},{"size":362,"mtime":1612196658875,"results":"51","hashOfConfig":"49"},{"size":2622,"mtime":1613146886445,"results":"52","hashOfConfig":"49"},{"size":1065,"mtime":1613098678958,"results":"53","hashOfConfig":"49"},{"size":666,"mtime":1612912768245,"results":"54","hashOfConfig":"49"},{"size":304,"mtime":1612890010559,"results":"55","hashOfConfig":"49"},{"size":2315,"mtime":1613145261334,"results":"56","hashOfConfig":"49"},{"size":2559,"mtime":1613145282945,"results":"57","hashOfConfig":"49"},{"size":228,"mtime":1612899877232,"results":"58","hashOfConfig":"49"},{"size":1994,"mtime":1613072776700,"results":"59","hashOfConfig":"49"},{"size":4314,"mtime":1613145441604,"results":"60","hashOfConfig":"49"},{"size":2641,"mtime":1613146309807,"results":"61","hashOfConfig":"49"},{"size":197,"mtime":1612367854350,"results":"62","hashOfConfig":"49"},{"size":4324,"mtime":1613079963923,"results":"63","hashOfConfig":"49"},{"size":2769,"mtime":1613080218264,"results":"64","hashOfConfig":"49"},{"size":594,"mtime":1612992523715,"results":"65","hashOfConfig":"49"},{"size":528,"mtime":1613161681285,"results":"66","hashOfConfig":"49"},{"size":588,"mtime":1613161654418,"results":"67","hashOfConfig":"49"},{"size":2285,"mtime":1612470174854,"results":"68","hashOfConfig":"49"},{"size":1338,"mtime":1612468981295,"results":"69","hashOfConfig":"49"},{"size":1545,"mtime":1613067969761,"results":"70","hashOfConfig":"49"},{"size":6306,"mtime":1613160592724,"results":"71","hashOfConfig":"49"},{"size":223,"mtime":1612993203918,"results":"72","hashOfConfig":"49"},{"size":6334,"mtime":1613149048635,"results":"73","hashOfConfig":"49"},{"size":1327,"mtime":1613161592064,"results":"74","hashOfConfig":"49"},{"size":261,"mtime":1612554930772,"results":"75","hashOfConfig":"49"},{"size":4327,"mtime":1613147961892,"results":"76","hashOfConfig":"49"},{"size":400,"mtime":1613098612105,"results":"77","hashOfConfig":"49"},{"size":202,"mtime":1612746450226,"results":"78","hashOfConfig":"49"},{"size":7485,"mtime":1613149604940,"results":"79","hashOfConfig":"49"},{"size":6974,"mtime":1613149059459,"results":"80","hashOfConfig":"49"},{"size":85,"mtime":1612798979402,"results":"81","hashOfConfig":"49"},{"size":208,"mtime":1612800409181,"results":"82","hashOfConfig":"49"},{"size":2007,"mtime":1613078947419,"results":"83","hashOfConfig":"49"},{"size":1393,"mtime":1613161777119,"results":"84","hashOfConfig":"49"},{"size":364,"mtime":1613161607210,"results":"85","hashOfConfig":"49"},{"size":348,"mtime":1613161690226,"results":"86","hashOfConfig":"49"},{"size":188,"mtime":1612988644464,"results":"87","hashOfConfig":"49"},{"size":232,"mtime":1612989066118,"results":"88","hashOfConfig":"49"},{"size":185,"mtime":1613074945034,"results":"89","hashOfConfig":"49"},{"size":122,"mtime":1613074850601,"results":"90","hashOfConfig":"49"},{"size":197,"mtime":1613074940958,"results":"91","hashOfConfig":"49"},{"size":130,"mtime":1613075141873,"results":"92","hashOfConfig":"49"},{"size":4847,"mtime":1613149365958,"results":"93","hashOfConfig":"49"},{"size":223,"mtime":1613098730754,"results":"94","hashOfConfig":"49"},{"size":1138,"mtime":1613157477992,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"mjj1m2",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"98"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"98"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"98"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/index.js",[],["205","206"],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/App.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reportWebVitals.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Navbar.js",["207","208","209","210","211"],"import React from 'react';\nimport 'semantic-ui-css/semantic.min.css'\nimport { Divider, Grid, Menu } from \"semantic-ui-react\";\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { logoutUser } from '../actions/auth'\nimport \"semantic-ui-css/semantic.min.css\";\nimport SearchBar from './SearchBar'\nimport history from \"../history\";\n\n\n\nimport {\n  Button,\n  Container,\n  Dropdown,\n\n  Header,\n  Icon,\n\n  Message\n} from \"semantic-ui-react\";\n\n\n\nclass Navbar extends React.Component{\n\n    handleSignOut = () => {\n      localStorage.removeItem('jwt_token')\n        this.props.logoutUser()\n    }\n\n    render(){\n        return(\n\n<div className=\"App\">\n  { this.props.currentUser ? \n        <Grid padded className=\"tablet computer only\" >\n          <Menu borderless fluid fixed=\"top\" size=\"huge\" >\n            <Container>\n            <Link to='/home'>\n              <Menu.Item style={{marginTop: '10px'}} active as=\"a\" >\n                Home\n              </Menu.Item>\n              </Link>\n              <Link to='/myWeightJourney'>\n              <Menu.Item as=\"a\" style={{marginTop: '10px'}} >My Weight Journey</Menu.Item>\n              </Link>\n              <Link to='/myDiaries'>\n              <Menu.Item as=\"a\" style={{marginTop: '10px'}} >My Diaries</Menu.Item>\n              </Link>\n              <Link to='/myHabits'>\n              <Menu.Item as=\"a\" style={{marginTop: '10px'}} >My Habits</Menu.Item>\n              </Link>\n              <Menu.Menu position=\"right\">\n              <Link to='/recipes'>\n                <Menu.Item as=\"a\" style={{marginTop: '10px'}} >Recipes</Menu.Item>\n                </Link>\n                <Menu.Item>\n             <SearchBar history={history}/>\n           </Menu.Item>\n                <Dropdown item text=\"Account\">\n                <Dropdown.Menu>\n                <Link to='/account_info'>\n                  <Dropdown.Item as=\"a\" >\n                    Settings\n                  </Dropdown.Item>\n                  </Link>\n                  <Link to='/'>\n                  <Dropdown.Item as=\"a\" onClick={this.handleSignOut}>\n                    Sign Out\n                  </Dropdown.Item>\n                  </Link>\n                </Dropdown.Menu>\n              </Dropdown>\n             \n              </Menu.Menu>\n            </Container>\n          </Menu>\n        </Grid>\n        :\n        null }\n</div>\n     \n\n        )\n    }\n\n} \n\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.currentUser\n    }\n}\n\nconst mapDispatchToProps = {\n    logoutUser: logoutUser\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/index.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/currentUser.js",["212"],"const currentUser = (state = null, action) => {\n  let updatedUser;\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n    case \"CURRENT_USER\":\n      return {\n        id: action.user.id,\n        email: action.user.email,\n        name: action.user.name,\n        password: action.user.password,\n      };\n    case \"LOGOUT_USER\":\n      return null;\n    case \"CREATE_USER\":\n      return {\n        id: action.user.id,\n        email: action.user.email,\n        name: action.user.name,\n        password: action.user.password,\n      };\n    case \"EDIT_USER\":\n      return {\n        ...action.user,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default currentUser;\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/auth.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/LoginForm.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RegisterForm.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/users.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/LandingPage.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/HomePage.js",["213","214","215","216"],"import React from \"react\";\nimport { Button, Card, Grid, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport weightEntries from \"../reducers/weightEntries\";\nimport mealCalories from \"../reducers/mealCalories\";\n\nclass HomePage extends React.Component {\n  renderTotal = () => {\n    let total;\n    let weights = this.props.weightEntries.map((entry) => {\n      return entry.weight;\n    });\n    if (weights.length > 0) {\n      const a = weights[0];\n      const b = weights[weights.length - 1];\n      const newTotal = (a - b).toFixed(1);\n      return newTotal;\n    } else {\n      return (total = 0);\n    }\n\n  };\n\n  render() {\n    let lastEntry;\n    let mealName;\n    let mealCals;\n    let exerciseName;\n    let exerciseCals;\n    if (this.props.currentUser) {\n        let weights = this.props.weightEntries.map((entry) =>  entry.weight)\n        if (weights.length> 0){\n          lastEntry = weights[weights.length-1]\n        } else {\n          lastEntry = 0\n        }\n    } else {\n        lastEntry = 0\n    }\n    if (this.props.currentUser && this.props.mealEntries.length > 0) {\n      mealName = this.props.mealEntries.slice(-1)[0].name;\n    } else {\n      mealName = 'No Meal Yet';\n    }\n    if (this.props.currentUser && this.props.mealEntries.length > 0) {\n      mealCals = this.props.mealEntries.slice(-1)[0].calories;\n    } else {\n      mealCals = 0;\n    }\n    if (this.props.currentUser && this.props.exerciseEntries.length > 0) {\n      exerciseName = this.props.exerciseEntries.slice(-1)[0].category;\n    } else {\n      exerciseName = 'No Activity Yet';\n    }\n    if (this.props.currentUser && this.props.exerciseEntries.length > 0) {\n     exerciseCals = this.props.exerciseEntries.slice(-1)[0]\n        .calories_burned;\n    } else {\n      exerciseCals = 0;\n    }\n\n    return (\n      <div class=\"row\" style={{ display: \"flex\" }}>\n        <div className=\"col1\">\n        <Link to=\"/myWeightJourney\">\n          <Button style={{ margin: \"1em\", width: \"20vw\", color:'rgb(202, 49, 49)' }}>\n            Add New Weight Entry\n          </Button>\n          </Link>\n          <br></br>\n          <p style={{ fontSize: \"20px\" }}>My Total Weight Lost</p>\n          <p style={{ fontSize: \"27px\" }}>{this.renderTotal()} lbs</p>\n          <i style={{ marginBottom: \".5em\" }} class=\" huge weight icon\"></i>\n          <p style={{ fontSize: \"20px\" }}>My Current Weight</p>\n          <p style={{ fontSize: \"27px\" }}>{lastEntry} lbs</p>\n        </div>\n        <div className=\"col2\">\n        <Link to=\"/myDiaries\">\n          <Button style={{ margin: \"1em\", width: \"20vw\", color:'rgb(158, 65, 161)' }}>\n            Add New Diary Entry\n          </Button>\n          </Link>\n          <br></br>\n          <p style={{ fontSize: \"20px\" }}>My Last Meal</p>\n          <p style={{ fontSize: \"27px\" }}>\n            {mealName}: {mealCals} calories\n          </p>\n          <i style={{ margin: \".5em\" }} class=\" big utensils icon\"></i>\n          <p style={{ fontSize: \"20px\" }}>My Last Activity</p>\n          <p style={{ fontSize: \"27px\" }}>\n            {exerciseName}: {exerciseCals} calories burned\n          </p>\n          <i style={{ margin: \".5em\" }} class=\" big bicycle icon\"></i>\n        </div>\n        <div className=\"col3\">\n        <Link to=\"/recipes\">\n          <Button style={{ margin: \"1em\", width: \"20vw\", color:'rgb(47, 47, 209)' }}>\n            See All Recipes\n          </Button>\n          </Link>\n          <br></br>\n          <p style={{ fontSize: \"20px\" }}>Suggested Recipes</p>\n          <Card style={{border: '2px solid red',   padding: \"10px\",\n          height: '40vh',\n          width: '20vw',\n          margin: \"5vh\",}}>\n              <Image src=\"https://spoonacular.com/recipeImages/568604-556x370.jpg\" style={{ height: \"20vh\",\n            width: \"auto\",}}>\n               <Card.Content style={{fontFamily: 'sans-serif', fontWeight: 'lighter'}}>\n                   Recipe\n               </Card.Content>\n              </Image>\n              </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n    weightEntries: state.weightEntries,\n    mealEntries: state.mealEntries,\n    exerciseEntries: state.exerciseEntries,\n  };\n};\nexport default connect(mapStateToProps)(HomePage);\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Diaries.js",["217","218","219","220"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport ExerciseEntriesContainer from \"./ExerciseEntriesContainer\";\nimport {\n  Divider,\n  Header,\n  Segment,\n  Form,\n  Input,\n\n} from \"semantic-ui-react\";\n\nimport MealEntriesContainer from \"./MealEntriesContainer\";\nimport { totalExerciseCals } from \"../actions/exerciseEntries\";\nimport { totalMealCals } from \"../actions/mealEntries\";\n\n\n\n\n\nclass Diaries extends React.Component {\n\n    constructor(){\n        super()\n        let today = new Date();\n        let dd = today.getDate()\n        let mm = today.getMonth()+1\n        let yyyy = today.getFullYear()\n        if(dd<10){\n            dd = '0'+dd\n        }\n        if(mm<10){\n            mm='0'+mm\n        }\n        const updatedDate = `${yyyy}-${mm}-${dd}`;\n        this.state={\n            date: updatedDate\n        }\n    }\n\n\nhandleChange = (e) => {\n    this.setState({\n        [e.target.name]: e.target.value\n    })\n}\n\n\n  render() {\nlet totalExerciseCals;\nlet totalMealCals;\nconst exerciseCals = this.props.specificExercises.map(exercise => exercise.calories_burned)\nconsole.log(exerciseCals)\nconst mealCals = this.props.specificMeals.map(exercise => exercise.calories)\nif (exerciseCals.length > 1){\n     totalExerciseCals = exerciseCals.reduce((a,b) => a + b, 0)\n} else if(exerciseCals.length = 1){\n    totalExerciseCals = exerciseCals\n} else {\n    totalExerciseCals = 0\n}\nif (mealCals.length > 1){\n    totalMealCals = mealCals.reduce((a,b) => a + b, 0)\n} else if(mealCals.length = 1){\n    totalMealCals = mealCals\n} else {\n    totalMealCals = 0\n}\n\nconst totalCals = (totalMealCals - totalExerciseCals).toFixed(1)\n\n    return (\n      <div\n        style={{ fontFamily: 'sans-serif', position: 'sticky', marginTop: '15vh'}}\n      >\n        <Segment >\n          <Header as=\"h3\">\n              <Form>\n              <Input\n              type='date'\n              name= 'date'\n              value={this.state.date}\n              onChange={this.handleChange}>\n              </Input>\n            </Form>\n          </Header>\n          <Divider section />\n\n          <Header as=\"h3\">Meals</Header>\n          <MealEntriesContainer date={this.state.date}/>\n\n          <Divider section />\n\n          <Header as=\"h3\">Activities</Header>\n          <ExerciseEntriesContainer date={this.state.date} />\n          <Divider section />\n  <Header as=\"h3\">Net Calories: {totalCals}</Header>\n        </Segment>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n      specificMeals: state.specificMeals,\n      specificExercises: state.specificExercises\n    };\n  };\n\n\nexport default connect(mapStateToProps)(Diaries);\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Habits.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RecipesContainer.js",["221"],"import React from 'react';\nimport { Button, Grid } from 'semantic-ui-react';\nimport Recipes from './Recipes';\nimport { findRecipes } from '../actions/recipes'\nimport { connect } from 'react-redux'\n\n\nclass RecipesContainer extends React.Component{\n\n\n\n    renderRecipes = (e) => {\n        const query = e.target.innerText\n        fetch(`https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/searchComplex?limitLicense=true&offset=0&number=36&query=${query}`, {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-key\": \"d6d30feb34msh027ba22c7ad5d85p111652jsn5e503987bf98\",\n                \"x-rapidapi-host\": \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\"\n            }\n        })\n        .then(resp => resp.json())\n        .then(recipesArr => {\n            const recipes = recipesArr.results.map(recipe => {\n                return recipe\n            })\n            this.props.findRecipes(recipes)\n            this.props.history.push(`/all_recipes/${query}`)\n        })\n    }\n\n\n\n    render(){\n\n        return (\n\n            <div >\n                 \n                <Grid >\n                <Grid.Row  columns={4}>\n                <Grid.Column >\n                <Button className='recipesgrid' size='massive' content='Low Calorie' style={{ border: '3px solid rgb(202, 49, 49)', height:'28vh', width:'18vw', color: 'black', backgroundColor: 'white', boxShadow: '10px 10px 8px rgb(202, 49, 49)'}} onClick={this.renderRecipes}/>\n                </Grid.Column>\n                <Grid.Column>\n                <Button className='recipesgrid'  size='massive' content='Low Carb' style={{  border: '3px solid rgb(179, 50, 168)', height:'28vh', width:'18vw', color: 'black', backgroundColor: 'white', boxShadow: '10px 10px 8px rgb(179, 50, 168)'}} onClick={this.renderRecipes}/>\n                </Grid.Column>\n                <Grid.Column>\n                <Button className='recipesgrid'  size='massive' content='Low Fat' style={{ border: '3px solid rgb(121, 50, 179)', height:'28vh', width:'18vw', color: 'black', backgroundColor: 'white', boxShadow: '10px 10px 8px rgb(121, 50, 179)'}} onClick={this.renderRecipes}/>\n                </Grid.Column>\n                <Grid.Column>\n                <Button className='recipesgrid'  size='massive' content='High Protein' style={{ border: '3px solid rgb(47, 47, 209)',height:'28vh', width:'18vw', color: 'black', backgroundColor: 'white', boxShadow: '10px 10px 8px rgb(47, 47, 209)'}} onClick={this.renderRecipes}/>\n                </Grid.Column>\n                </Grid.Row>\n                <Grid.Row  columns={4}>\n               \n                <Grid.Column>\n                <Button className='recipesgrid'   size='massive' content='Vegan' style={{border: `3px solid rgb(202, 49, 49)`, height:'28vh', width:'18vw', color: 'black', backgroundColor: 'white', boxShadow: '10px 10px 8px rgb(202, 49, 49)'}} onClick={this.renderRecipes}/>\n                </Grid.Column>\n                <Grid.Column>\n                <Button className='recipesgrid'  size='massive' content='Vegetarian' style={{border: '3px solid rgb(179, 50, 168)', height:'28vh', width:'18vw', color: 'black', backgroundColor: 'white', boxShadow: '10px 10px 8px rgb(179, 50, 168)'}} onClick={this.renderRecipes}/>\n                </Grid.Column>\n                <Grid.Column>\n                <Button className='recipesgrid'  size='massive' content='Gluten Free' style={{border: '3px solid rgb(121, 50, 179)', height:'28vh', width:'18vw', color: 'black', backgroundColor: 'white', boxShadow: '10px 10px 8px rgb(121, 50, 179)'}} onClick={this.renderRecipes}/>\n                </Grid.Column>\n                <Grid.Column>\n                <Button className='recipesgrid'  size='massive' content='Dairy Free' style={{border: '3px solid rgb(47, 47, 209)', height:'28vh', width:'18vw', color: 'black', backgroundColor: 'white', boxShadow: '10px 10px 8px rgb(47, 47, 209)'}} onClick={this.renderRecipes}/>\n                </Grid.Column>\n                </Grid.Row>\n                </Grid>\n              \n                \n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    recipes: state.recipes\n    }\n}\n\nconst mapDispatchToProps = {\n    findRecipes: findRecipes\n  }\n\nexport default connect(mapStateToProps ,mapDispatchToProps)(RecipesContainer);\n\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/AccountInfo.js",["222","223"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport 'semantic-ui-css/semantic.min.css' \nimport { Form, Input, Button } from 'semantic-ui-react'\nimport { editUser } from '../actions/users'\n\nclass AccountInfo extends React.Component{\n  \nconstructor(props){\n    super(props)\n    this.state={\n        name: props.currentUser.name ,\n        email: props.currentUser.email ,\n        password: '',\n        error: ''\n    }\n}\nhandleChange = (e) => {\n    this.setState({\n        [e.target.name]: e.target.value\n    })\n}\n\nhandleSubmit = (e) => {\n    e.preventDefault()\n    const {id} = this.props.currentUser\n    const reqObj = {\n        method: 'PATCH',\n        headers: {\n        'Content-Type': 'application/json'\n        },\n        body:  JSON.stringify({\n            email: this.state.email,\n            name: this.state.name,\n            password: this.state.password\n          })\n    }\n    fetch(`http://localhost:3000/users/${id}`, reqObj)\n    .then(resp => resp.json())\n    .then(updatedUser => {\n        if (updatedUser.error){\n            this.setState({\n                error: updatedUser.error\n            })\n        } else {\n            this.props.editUser(updatedUser)\n            this.props.history.push('/home')\n        }\n    })\n}\n    render(){\n       \n        const { name, email } = this.props.currentUser\n        return (\n            <div className='land'>\n            { this.state.error ? <h4 style={{color: 'red'}}>{this.state.error}</h4> : null}\n            <Form  className='acctform' widths='equal' style={{textAlign: 'left'}}>\n            <h1>Account Info</h1>\n            <br></br>\n           <Form.Field >\n            <label>Name</label>\n            <Input \n            name='name' \n            value={this.state.name}\n            onChange={this.handleChange}\n            />\n            </Form.Field>\n            <Form.Field >\n            <label>Email</label>\n            <Input \n            name='email' \n            value={this.state.email}\n            onChange={this.handleChange}\n            />\n            </Form.Field>\n            <Form.Field >\n            <label>Password confirmation</label>\n            <Input \n            name='password' \n            value={this.state.password}\n            onChange={this.handleChange}\n            />\n            </Form.Field>\n            <Button type='submit' content='Save changes' onClick={this.handleSubmit} />\n            <Button type='cancel' content='Cancel' onClick={() => this.props.history.push('/home')} />\n\n        </Form>\n      \n</div>\n\n        )}\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.currentUser\n    }\n}\n\nconst mapDispatchToProps = {\n    editUser: editUser\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountInfo);","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/weightEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/mealEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/exerciseEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/weightEntriesContainer.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/weightEntry.js",["224"],"import React from 'react'\nimport { connect } from 'react-router-dom'\n\nclass weightEntry extends React.Component{\n\n    render(){\n        return(\n            <div>\n                Hi\n                <p>{this.props.weightEntry.weight}</p>\n                <p>{this.props.weightEntry.date}</p>\n            </div>\n        )\n    }\n}\n\nexport default weightEntry",["225","226"],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/WeightEntry.js",["227"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { deleteEntry } from '../actions/weightEntries'\n\nclass WeightEntry extends React.Component{\n\n\n    handleDelete = () => {\n        const { id } = this.props.entry\n        fetch(`http://localhost:3000/weight_entries/${id}`, {\n            method: 'DELETE'\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            this.props.deleteEntry(id)\n        })\n    }\n\n    render(){\n        const { weight, date, id } = this.props.entry\n        \n        const year = date.toString().slice(0, 4)\n        const month = date.toString().slice(5,7)\n        const day = date.toString().slice(8,10)\n        const updatedDate = `${month}/${day}/${year}`\n        return(\n            <tbody>\n            <tr>\n              <td style={{fontWeight: 'lighter', fontSize: '2.5vh'}} data-label=\"date\">{updatedDate}</td>\n              <td style={{fontWeight: 'lighter', fontSize: '2.5vh'}}data-label=\"Age\">{weight} lbs\n              <button  className=\"ui button\" onClick={() => this.handleDelete(this.props.entry.id)} style={{\n                   float: 'right', marginLeft: '1vh'\n               }}>\n                   Delete\n                   </button>\n                   </td>\n            </tr>\n          </tbody>\n            \n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    deleteEntry: deleteEntry\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.currentUser\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeightEntry)","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/WeightEntriesContainer.js",["228","229"],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/weightEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/ExerciseEntriesContainer.js",["230"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport ExerciseEntry from \"./ExerciseEntry\";\nimport { Table } from \"semantic-ui-react\";\nimport { Button, Form, Input, Message } from \"semantic-ui-react\";\nimport { createEntry, totalExerciseCals } from \"../actions/exerciseEntries\";\nimport {specifiedExercises} from '../actions/specifiedExercises'\n\nclass ExerciseEntriesContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      addExercise: true,\n      showMessage: false,\n      category: \"\",\n      duration: \"\",\n      calories_burned: \"\",\n      date: '',\n      error: \"\"\n    };\n  }\n\n  toggleAddExercise = () => {\n    this.setState({\n      addExercise: !this.state.addExercise,\n    });\n  };\n\n\n  showMessage = () => {\n    this.setState({\n      showMessage: true\n    })\n    setTimeout(()=> {\n      this.setState({ showMessage: false})\n    }, 3000)\n  }\n\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const category = this.state.category;\n    const duration = this.state.duration;\n    const updatedDate = parseInt(this.state.date.replace(\"-\", \"\").replace(\"-\", \"\"));\n    const calories_burned = this.state.calories_burned;\n    const reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        category: category,\n        duration: duration,\n        calories_burned: calories_burned,\n        user_id: this.props.currentUser.id,\n        date: updatedDate\n      }),\n    };\n    fetch(\"http://localhost:3000/exercise_entries\", reqObj)\n      .then((resp) => resp.json())\n      .then((newEntry) => {\n        if (newEntry.error) {\n          this.setState({\n            error: newEntry.error,\n          });\n        } else {\n          this.toggleAddExercise();\n          this.props.createEntry(newEntry);\n          this.showMessage();\n        }\n        this.setState({\n            category: \"\",\n            duration: \"\",\n            calories_burned: \"\",\n            date: ''\n        })\n      });\n  };\n\n  renderTotal = () => {\n    let total;\n    let date = parseInt(this.props.date.replace('-', '').replace('-', ''))\n    const entries = this.props.exerciseEntries.filter(entry => entry.date === date)\n    let calories = entries.map((entry) => {\n      return entry.calories_burned\n    });\n    const updatedCalories = (calories.map(entry => {\n        if(entry===undefined){\n            return 0\n        } else {\n            return entry\n        }\n    }))\n    if (updatedCalories.length > 0) {\n      const exerciseCals = updatedCalories.reduce((a, b) => a + b, 0);\n      this.props.totalExerciseCals(exerciseCals)\n      return exerciseCals\n    } else {\n      return (total = 0);\n    }\n  };\n  render() {\n    let date = parseInt(this.props.date.replace('-', '').replace('-', ''))\n    const entries = this.props.exerciseEntries.filter(entry => entry.date === date)\n    this.props.specifiedExercises(entries)\n    const myEntry = entries.map(entry => <ExerciseEntry entry={entry} key={entry.id} />)\n    return (\n      <div>\n    { this.state.error ? <h4 style={{color: 'red'}}>{this.state.error}</h4> : null}\n    {this.state.showMessage ?\n                     <Message\n                     success\n                     header='Your Exercise Submission Was Successful!'\n                   />\n                  : \n                  null}\n        <Table singleLine >\n          <Table.Header>\n            <Table.Row >\n              <Table.HeaderCell>Activity Type</Table.HeaderCell>\n              <Table.HeaderCell>Duration </Table.HeaderCell>\n              <Table.HeaderCell >Calories Burned</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          {myEntry}\n          <Table.Row >\n            <Table.Cell>Total Calories Burned</Table.Cell>\n            <Table.Cell></Table.Cell>\n            <Table.Cell >{this.renderTotal()} </Table.Cell>\n          </Table.Row>\n        </Table>\n    \n          {this.state.addExercise ? (\n            <Button\n              onClick={() => this.toggleAddExercise()}\n              \n            >\n              Add\n            </Button>\n          ) : (\n         \n              <Form >\n                <Input\n                style={{display: 'block'}}\n                  type=\"text\"\n                  name=\"category\"\n                  value={this.state.category}\n                  onChange={this.handleChange}\n                  placeholder=\"activity type\"\n                ></Input>\n     \n                <Input\n           style={{display: 'block'}}\n                  type=\"number\"\n                  name=\"duration\"\n                  value={this.state.duration}\n                  onChange={this.handleChange}\n                  placeholder=\"duration (min)\"\n                ></Input>\n                <Input\n                 style={{display: 'block'}}\n                  type=\"number\"\n                  name=\"calories_burned\"\n                  value={this.state.calories_burned}\n                  onChange={this.handleChange}\n                  placeholder=\"calories burned\"\n                ></Input>\n                     <Input\n              style={{display: 'block'}}\n              type=\"date\"\n              name=\"date\"\n              value={this.state.date}\n              onChange={this.handleChange}\n              placeholder=\"date\"\n            ></Input>\n                <Button\n                  type=\"button\"\n                  onClick={this.handleSubmit}\n                  className=\"ui blue button\"\n                >\n                  Submit\n                </Button>\n                <Button\n                  type=\"button\"\n                  onClick={this.toggleAddExercise}\n                  className=\"ui button\"\n                >\n                  Cancel\n                </Button>\n              </Form>\n         \n          )}\n   \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n    exerciseEntries: state.exerciseEntries,\n  };\n};\n\nconst mapDispatchToProps = {\n  createEntry: createEntry,\n  totalExerciseCals: totalExerciseCals,\n  specifiedExercises: specifiedExercises\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExerciseEntriesContainer);\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/ExerciseEntry.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/NetCalories.js",[],["231","232"],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Recipes.js",["233","234"],"import React from \"react\";\nimport { Button, Grid } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport RecipeCard from \"./RecipeCard\";\nimport { findRecipes, viewRecipe } from \"../actions/recipes\";\n\nclass Recipes extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      intervalId: 0\n    };\n  }\n\n  componentDidMount(){\n\n    const query = this.props.match.params.category\n      if(this.props.recipes.length === 0){\n        fetch(`https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/searchComplex?limitLicense=true&offset=0&number=25&query=${query}`, {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-key\": \"d6d30feb34msh027ba22c7ad5d85p111652jsn5e503987bf98\",\n                \"x-rapidapi-host\": \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\"\n            }\n        })\n        .then(resp => resp.json())\n        .then(recipesArr => {\n            const recipes = recipesArr.results.map(recipe => {\n                return recipe\n            })\n            this.props.findRecipes(recipes)\n        })\n      }\n  }\n\n  handleClick = (id) => {\n    fetch(\n      `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/${id}/information`,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"d6d30feb34msh027ba22c7ad5d85p111652jsn5e503987bf98\",\n          \"x-rapidapi-host\":\n            \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\",\n        },\n      }\n    )\n      .then((resp) => resp.json())\n      .then((recipeInfo) => {\nconsole.log(recipeInfo)\n        this.props.viewRecipe(recipeInfo);\n        this.props.history.push(`/show_recipes/${id}`);\n      });\n  };\n\n\n  renderCard = (recipe) => {\n    const { title, image, id } = recipe;\n    return (\n      <Card\n        onClick={() => this.handleClick(id)}\n  \n        style={{\n          padding: \"10px\",\n          height: '50vh',\n          width: '20vw',\n          margin: \"1vh\"\n        }}\n      >\n        <Image\n          src={image}\n          wrapped\n          ui={false}\n          style={{\n            height: \"auto\",\n            width: \"auto\",\n          }}\n        />\n        <Card.Content>\n          <Card.Header style={{fontSize: '3vh', fontFamily: 'sans-serif', fontWeight: 'lighter'}}>{title}</Card.Header>\n        </Card.Content>\n      </Card>\n    );\n  };\n\n  scrollStep = () => {\n    if (window.pageYOffset === 0) {\n      clearInterval(this.state.intervalId);\n    }\n    window.scroll(0, window.pageYOffset - this.props.scrollStepInPx);\n  };\n\n  scrollToTop = () => {\n    let intervalId = setInterval(\n      this.scrollStep.bind(this),\n      this.props.delayInMs\n    );\n    this.setState({ intervalId: intervalId });\n  };\n\n  render() {\n    return (\n      <div>\n      \n      <Button\n          onClick={() => this.props.history.push('/recipes')}\n          style={{marginTop: '12vh', marginBottom: '0px', marginLeft: '3vh', float:'left'}}\n        >\n          Back To All Categories\n        </Button>\n        <br></br>\n        <br></br>\n        <br></br>\n        <div\n          style={{\n            paddingLeft: '9%',\n            paddingTop: \"100px\"\n          }}\n        >\n      \n          <Grid >\n            <Grid.Row >\n              \n              {this.props.recipes.length > 0 ?\n              this.props.recipes.map((recipe) => {\n                return this.renderCard(recipe);\n              })\n              :\n              <p>No Recipes Found. Please Consider Searching For New Ones</p>\n            }\n            </Grid.Row>\n          </Grid>\n          {this.props.recipes.length > 0 ?\n          <Button\n            style={{\n              float: \"right\",\n              marginBottom: \"15px\",\n              marginRight: \"15px\",\n              padding: \"15px\",\n            }}\n            icon=\"angle double up\"\n            title=\"Back to top\"\n            className=\"scroll\"\n            onClick={() => {\n              this.scrollToTop();\n            }}\n          ></Button>\n    :\n    null}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    recipes: state.recipes,\n  };\n};\n\nconst mapDispatchToProps = {\n  viewRecipe: viewRecipe,\n  findRecipes: findRecipes\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Recipes);\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/recipes.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/recipes.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RecipeCard.js",["235","236","237"],"import React from \"react\";\nimport { Button, Grid, Card, Icon, Image, Message } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { nutritionRecipe, viewRecipe } from \"../actions/recipes\";\nimport weightEntries from \"../reducers/weightEntries\";\n\nimport Popup from \"./Popup\";\n\n\nclass RecipeCard extends React.Component {\n\n    constructor(){\n        super()\n        this.state = {\n            calories: '',\n            carbs: '',\n            fat: '',\n            protein: '',\n           showPopup: false,\n           showMessage: false\n        }\n    }\n\n    togglePopup = () => {\n      this.setState({\n        showPopup: !this.state.showPopup\n      })\n    }\n\n    showMessage = () => {\n      this.setState({\n        showMessage: true\n      })\n      setTimeout(()=> {\n        this.setState({ showMessage: false})\n      }, 3000)\n    }\n  \n\n    componentDidMount(){\n       const id = parseInt(this.props.match.params.id)\n        if(!this.props.recipe){\n        fetch(\n            `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/${id}/information`,\n            {\n              method: \"GET\",\n              headers: {\n                \"x-rapidapi-key\":\n                  \"d6d30feb34msh027ba22c7ad5d85p111652jsn5e503987bf98\",\n                \"x-rapidapi-host\":\n                  \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\",\n              }\n            }\n          )\n          .then((resp) => resp.json())\n          .then((recipeInfo) => {\n            this.props.viewRecipe(recipeInfo);\n          });\n    }\n}\n\n  renderNutrition = (id) => {\n    fetch(\n      `https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/${id}/nutritionWidget.json`,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-key\":\n            \"d6d30feb34msh027ba22c7ad5d85p111652jsn5e503987bf98\",\n          \"x-rapidapi-host\":\n            \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\",\n        }\n      }\n    )\n    .then(resp => resp.json())\n    .then(nutritionInfo => {\n     this.props.nutritionRecipe(nutritionInfo)\n        this.setState({\n            calories: nutritionInfo.calories,\n            carbs: nutritionInfo.carbs,\n            fat: nutritionInfo.fat,\n            protein: nutritionInfo.protein\n        })\n    })\n  };\n\n  \n\n  render() {\n  \n    return (\n    \n      <div >\n        {this.props.recipe ? \n        <div>\n          <div >\n            <div style={{left: 0}}>\n                <Button  onClick={()=>this.props.history.goBack()}  \n                style={{ marginTop: \"12vh\", marginBottom: '0px', marginLeft: '3vh', float: 'left'}}>Back To All Recipes</Button>\n              <div style={{ paddingTop: '120px'}}>\n              <Grid style={{justifyContent: 'center'}}> \n\n                <Grid.Row >\n                {this.state.showMessage ?\n                     <Message\n                     style={{fontSize: '2vh'}}\n                     success\n                     header='Your Meal Submission Was Successful!'\n                   />\n                  : \n                  null}\n              <p style={{ paddingRight:'20vh', fontSize: '7vh', fontFamily: 'sans-serif', fontWeight: 'lighter'}}>{this.props.recipe.title} </p>\n              </Grid.Row>\n              <Grid.Row >\n              \n              <Image\n                src={this.props.recipe.image}\n                style={{\n                  height: 'auto',\n                  width: 'auto',\n                  display: 'inline',\n                  marginLeft: 'auto',\n                  marginRight: 'auto'\n                }}\n              />\n              <div style={{marginRight:'22vh', justifyContent: 'center', height: '51vh'}}>\n              <Button style={{ color: 'purple', marginBottom: '2vh'}} onClick={this.togglePopup}>Add this recipe to your meal diary?</Button>\n              {this.state.showPopup ? \n              <Popup \n              closePopup={this.togglePopup}\n              showMessage={this.showMessage}\n                />\n                :\n                null\n            }\n              <div style={{ marginBottom:'1vh', padding: '1vh', justifyContent:'center', border: '1px dotted black',  textAlign:'center',  height:'22vh',  color: 'black', fontSize:'1.8vh'}}>\n            <p>Ready In: {this.props.recipe.readyInMinutes} Min</p>\n            <p>Servings: {this.props.recipe.servings}</p>\n    <p>Health Score: {this.props.recipe.healthScore}</p>\n    <p>Weight Watcher Smart Points: {this.props.recipe.weightWatcherSmartPoints}</p>\n    \n    {this.props.recipe.diets.map(diet => {\n              return <p style={{display: 'inline'}}>{diet}. </p>\n            })}\n    \n              </div>\n              <div >\n              <Grid.Row>\n              <div style={{ padding: '1vh',   display:'inline', float: 'left', border: '1px dotted black',  textAlign:'center',  height:'21.8vh', width:'100%',  color: 'black', fontSize:'2vh'}}>\n                  <p style={{  fontSize:'2vh'}} >Nutrion Facts</p>\n                  <p>{this.renderNutrition(this.props.recipe.id)}</p>\n                    <p style={{  fontSize:'1.8vh'}} >Calories: {this.state.calories}</p>\n                    <p style={{  fontSize:'1.8vh'}}>Carbs: {this.state.carbs}</p>\n                    <p style={{  fontSize:'1.8vh'}}>Fat: {this.state.fat}</p>\n                    <p style={{  fontSize:'1.8vh'}}>Protein: {this.state.protein}</p>\n                </div>\n                \n                </Grid.Row>\n              </div>\n              </div>\n              </Grid.Row>\n              </Grid>\n              </div>\n              \n        \n        \n     <Grid>\n       <Grid.Row>\n         <div style={{ display: 'flex',  justifyContent: 'center', height: '80vh', paddingTop:'5vh'}}>\n                <div style={{ textAlign: 'center', display: 'inline',  margin: '1vh',  width: '40%', overflowY: 'scroll', msOverflowStyle: 'hidden'}}>\n                  <p style={{fontSize: '3vh'}}>Ingredients</p>\n                  <p>\n                    <ul style={{ textAlign: 'center', fontSize:'2.5vh', listStyleType: 'none'}}>\n                      {this.props.recipe.extendedIngredients.map((ing) => {\n                        return <li>{ing.original}</li>;\n                      })}\n                    </ul>\n                  </p>\n                </div>\n                <div style={{ display: 'inline',  margin: '1vh', width: '40%', overflowY: 'scroll'}}>\n                  <p style={{fontSize: '3vh'}}>Directions</p>\n                  <p>\n                    <ol style={{ textAlign: \"left\", fontSize:'2.5vh'  }}>\n                      {this.props.recipe.analyzedInstructions[0] ? \n                      this.props.recipe.analyzedInstructions[0].steps.map((step) => {\n                        return <li>{step.step}</li>;\n                      }) : \n                        <li>Sorry, but at this time we are still gathering the directions.</li>\n                    }\n                    </ol>\n                  </p>\n                </div>\n                </div>\n                </Grid.Row>\n                </Grid>\n              \n           \n            <div class=\"ui hidden divider\"></div>\n            <div class=\"ui divider\"></div>\n          </div>\n        </div>\n      </div>\n      : \n      null }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    recipe: state.recipe,\n  };\n};\n\nconst mapDispatchToProps = {\n    viewRecipe: viewRecipe, \n    nutritionRecipe: nutritionRecipe\n  };\n  \n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecipeCard);\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/MealEntriesContainer.js",["238"],"import React from \"react\";\nimport { Table, Button, Form, Input } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport MealEntry from \"./MealEntry\";\nimport { createEntry, totalMealCals } from \"../actions/mealEntries\";\nimport {specifiedMeals} from '../actions/specifiedMeals'\nimport { Popup, Message } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\n\n\n\nclass MealEntriesContainer extends React.Component {\n  \n  constructor() {\n    \n    super();\n\n    this.state = {\n      name: '',\n      fat: '',\n      carbs: '',\n      protein: '',\n      calories: '',\n      date: '',\n      addMeal: true,\n      showMessage: false,\n      error: ''\n    };\n  }\n\n  toggleAddMeal = () => {\n    this.setState({\n      addMeal: !this.state.addMeal,\n    });\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  showMessage = () => {\n    this.setState({\n      showMessage: true\n    })\n    setTimeout(()=> {\n      this.setState({ showMessage: false})\n    }, 3000)\n  }\n\n  handleSubmit = (e) => {\n  e.preventDefault()\n    const name = this.state.name;\n    const fat = this.state.fat;\n    const carbs = this.state.carbs;\n    const protein = this.state.protein;\n    const calories = this.state.calories;\n    const updatedDate = parseInt(this.state.date.replace(\"-\", \"\").replace(\"-\", \"\"));\n    const reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: name,\n        fat: fat,\n        carbs: carbs,\n        protein: protein,\n        calories: calories,\n        user_id: this.props.currentUser.id,\n        date: updatedDate\n      }),\n    };\n    fetch(\"http://localhost:3000/meal_entries\", reqObj)\n      .then((resp) => resp.json())\n      .then((newEntry) => {\n        if (newEntry.error) {\n          this.setState({\n            error: newEntry.error,\n          });\n        } else {\n          this.toggleAddMeal();\n          this.showMessage()\n          this.props.createEntry(newEntry);\n        }\n        this.setState({\n            name: '',\n            fat: '',\n            carbs: '',\n            protein: '',\n            calories: '',\n            date: ''\n        })\n      });\n  };\n\n  renderTotal = () => {\n    let total;\n    let date = parseInt(this.props.date.replace('-', '').replace('-', ''))\n    const entries = this.props.mealEntries.filter(entry => entry.date === date)\n    let calories = entries.map((entry) => {\n      return entry.calories\n    });\n    const updatedCalories = (calories.map(entry => {\n      if(entry===undefined){\n          return 0\n      } else {\n          return entry\n      }\n  }))\n  if (updatedCalories.length > 0) {\n    const mealCals = updatedCalories.reduce((a, b) => a + b, 0).toFixed(2)\n    this.props.totalMealCals(mealCals)\n    return mealCals\n  } else {\n    return (total = 0);\n  }\n  }\n\n  render() {\n\n    let date = parseInt(this.props.date.replace('-', '').replace('-', ''))\nconst entries = this.props.mealEntries.filter(entry => entry.date === date)\nthis.props.specifiedMeals(entries)\nconst myEntry = entries.map(entry => <MealEntry entry={entry} key={entry.id} />)\n    return (\n      <div>\n                  { this.state.error ? <h4 style={{color: 'red'}}>{this.state.error}</h4> : null}\n                  {this.state.showMessage ?\n                     <Message\n                     success\n                     header='Your Meal Submission Was Successful!'\n                   />\n                  : \n                  null}\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Name</Table.HeaderCell>\n              <Table.HeaderCell>Fat (g)</Table.HeaderCell>\n              <Table.HeaderCell>Carbs (g)</Table.HeaderCell>\n              <Table.HeaderCell>Protein (g)</Table.HeaderCell>\n              <Table.HeaderCell>Calories</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          {myEntry}\n          <Table.Row >\n            <Table.Cell>Total Calories Burned</Table.Cell>\n            <Table.Cell></Table.Cell>\n            <Table.Cell></Table.Cell>\n            <Table.Cell></Table.Cell>\n            <Table.Cell>{this.renderTotal()} </Table.Cell>\n          </Table.Row>\n        </Table>\n      \n        {this.state.addMeal ? \n        <Popup flowing hoverable trigger={\n              <Button\n              style={{ marginLeft: \"25px\" }}\n              onClick={this.toggleAddMeal}\n            >\n              Add\n            </Button>\n            } >\n              <p>You can easily add a meal to your diary from our recipes <Link to='/recipes'>here</Link>!</p>\n            </Popup>\n            :\n            <Form>\n            <Input\n             style={{display: 'block'}}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              placeholder=\"Meal Name\"\n            ></Input>\n            <Input\n             style={{display: 'block'}}\n              type=\"number\"\n              name=\"fat\"\n              value={this.state.fat}\n              onChange={this.handleChange}\n              placeholder=\"fat\"\n            ></Input>\n            <Input\n             style={{display: 'block'}}\n              type=\"number\"\n              name=\"carbs\"\n              value={this.state.carbs}\n              onChange={this.handleChange}\n              placeholder=\"carbs\"\n            ></Input>\n             <Input\n              style={{display: 'block'}}\n              type=\"number\"\n              name=\"protein\"\n              value={this.state.protein}\n              onChange={this.handleChange}\n              placeholder=\"protein\"\n            ></Input>\n             <Input\n              style={{display: 'block'}}\n              type=\"number\"\n              name=\"calories\"\n              value={this.state.calories}\n              onChange={this.handleChange}\n              placeholder=\"calories\"\n            ></Input>\n              <Input\n              style={{display: 'block'}}\n              type=\"date\"\n              name=\"date\"\n              value={this.state.date}\n              onChange={this.handleChange}\n              placeholder=\"date\"\n            ></Input>\n            <Button\n              type=\"button\"\n              onClick={this.handleSubmit}\n              className=\"ui blue button\"\n            >\n              Submit\n            </Button>\n            <Button\n              type=\"button\"\n              onClick={this.toggleAddMeal}\n              className=\"ui button\"\n            >\n              Cancel\n            </Button>\n          </Form>\n        \n    }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n    mealEntries: state.mealEntries,\n  };\n};\n\nconst mapDispatchToProps = {\n    createEntry: createEntry,\n    totalMealCals: totalMealCals,\n    specifiedMeals: specifiedMeals\n  };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MealEntriesContainer);\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/history/index.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/viewRecipe.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/SearchBar.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/MealEntry.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/exerciseEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/mealEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/mealCalories.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/exerciseCalories.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/specificMeals.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/specifiedMeals.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/specificExercises.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/specifiedExercises.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Popup.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/nutritionInfo.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/LineGraph.js",[],{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":3,"column":10,"nodeType":"245","messageId":"246","endLine":3,"endColumn":17},{"ruleId":"243","severity":1,"message":"247","line":14,"column":3,"nodeType":"245","messageId":"246","endLine":14,"endColumn":9},{"ruleId":"243","severity":1,"message":"248","line":18,"column":3,"nodeType":"245","messageId":"246","endLine":18,"endColumn":9},{"ruleId":"243","severity":1,"message":"249","line":19,"column":3,"nodeType":"245","messageId":"246","endLine":19,"endColumn":7},{"ruleId":"243","severity":1,"message":"250","line":21,"column":3,"nodeType":"245","messageId":"246","endLine":21,"endColumn":10},{"ruleId":"243","severity":1,"message":"251","line":2,"column":7,"nodeType":"245","messageId":"246","endLine":2,"endColumn":18},{"ruleId":"243","severity":1,"message":"252","line":2,"column":24,"nodeType":"245","messageId":"246","endLine":2,"endColumn":28},{"ruleId":"243","severity":1,"message":"253","line":5,"column":8,"nodeType":"245","messageId":"246","endLine":5,"endColumn":21},{"ruleId":"243","severity":1,"message":"254","line":6,"column":8,"nodeType":"245","messageId":"246","endLine":6,"endColumn":20},{"ruleId":"243","severity":1,"message":"255","line":20,"column":15,"nodeType":"245","messageId":"246","endLine":20,"endColumn":20},{"ruleId":"243","severity":1,"message":"256","line":14,"column":10,"nodeType":"245","messageId":"246","endLine":14,"endColumn":27},{"ruleId":"243","severity":1,"message":"257","line":15,"column":10,"nodeType":"245","messageId":"246","endLine":15,"endColumn":23},{"ruleId":"258","severity":1,"message":"259","line":57,"column":11,"nodeType":"260","messageId":"261","endLine":57,"endColumn":34},{"ruleId":"258","severity":1,"message":"259","line":64,"column":11,"nodeType":"260","messageId":"261","endLine":64,"endColumn":30},{"ruleId":"243","severity":1,"message":"262","line":3,"column":8,"nodeType":"245","messageId":"246","endLine":3,"endColumn":15},{"ruleId":"243","severity":1,"message":"263","line":53,"column":17,"nodeType":"245","messageId":"246","endLine":53,"endColumn":21},{"ruleId":"243","severity":1,"message":"264","line":53,"column":23,"nodeType":"245","messageId":"246","endLine":53,"endColumn":28},{"ruleId":"243","severity":1,"message":"265","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":17},{"ruleId":"239","replacedBy":"266"},{"ruleId":"241","replacedBy":"267"},{"ruleId":"243","severity":1,"message":"268","line":20,"column":31,"nodeType":"245","messageId":"246","endLine":20,"endColumn":33},{"ruleId":"243","severity":1,"message":"269","line":7,"column":8,"nodeType":"245","messageId":"246","endLine":7,"endColumn":17},{"ruleId":"243","severity":1,"message":"255","line":88,"column":15,"nodeType":"245","messageId":"246","endLine":88,"endColumn":20},{"ruleId":"243","severity":1,"message":"255","line":106,"column":15,"nodeType":"245","messageId":"246","endLine":106,"endColumn":20},{"ruleId":"239","replacedBy":"270"},{"ruleId":"241","replacedBy":"271"},{"ruleId":"243","severity":1,"message":"249","line":4,"column":16,"nodeType":"245","messageId":"246","endLine":4,"endColumn":20},{"ruleId":"243","severity":1,"message":"272","line":5,"column":8,"nodeType":"245","messageId":"246","endLine":5,"endColumn":18},{"ruleId":"243","severity":1,"message":"273","line":2,"column":24,"nodeType":"245","messageId":"246","endLine":2,"endColumn":28},{"ruleId":"243","severity":1,"message":"249","line":2,"column":30,"nodeType":"245","messageId":"246","endLine":2,"endColumn":34},{"ruleId":"243","severity":1,"message":"253","line":5,"column":8,"nodeType":"245","messageId":"246","endLine":5,"endColumn":21},{"ruleId":"243","severity":1,"message":"255","line":117,"column":13,"nodeType":"245","messageId":"246","endLine":117,"endColumn":18},"no-native-reassign",["274"],"no-negated-in-lhs",["275"],"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Header' is defined but never used.","'Icon' is defined but never used.","'Message' is defined but never used.","'updatedUser' is defined but never used.","'Grid' is defined but never used.","'weightEntries' is defined but never used.","'mealCalories' is defined but never used.","'total' is assigned a value but never used.","'totalExerciseCals' is defined but never used.","'totalMealCals' is defined but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'Recipes' is defined but never used.","'name' is assigned a value but never used.","'email' is assigned a value but never used.","'connect' is defined but never used.",["274"],["275"],"'id' is assigned a value but never used.","'LineGraph' is defined but never used.",["274"],["275"],"'RecipeCard' is defined but never used.","'Card' is defined but never used.","no-global-assign","no-unsafe-negation"]