[{"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/index.js":"1","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/App.js":"2","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reportWebVitals.js":"3","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Navbar.js":"4","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/index.js":"5","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/currentUser.js":"6","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/auth.js":"7","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/LoginForm.js":"8","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RegisterForm.js":"9","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/users.js":"10","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/LandingPage.js":"11","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/HomePage.js":"12","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Diaries.js":"13","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RecipesContainer.js":"14","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/AccountInfo.js":"15","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/weightEntries.js":"16","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/mealEntries.js":"17","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/exerciseEntries.js":"18","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/weightEntriesContainer.js":"19","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/weightEntry.js":"20","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/WeightEntry.js":"21","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/WeightEntriesContainer.js":"22","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/weightEntries.js":"23","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/ExerciseEntriesContainer.js":"24","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/ExerciseEntry.js":"25","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Recipes.js":"26","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/recipes.js":"27","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/recipes.js":"28","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RecipeCard.js":"29","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/MealEntriesContainer.js":"30","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/history/index.js":"31","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/viewRecipe.js":"32","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/SearchBar.js":"33","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/MealEntry.js":"34","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/exerciseEntries.js":"35","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/mealEntries.js":"36","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/specificMeals.js":"37","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/specifiedMeals.js":"38","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/specificExercises.js":"39","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/specifiedExercises.js":"40","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Popup.js":"41","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/nutritionInfo.js":"42","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/LineGraph.js":"43","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/FavoriteRecipes.js":"44","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/favoriteRecipes.js":"45","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/favoriteRecipe.js":"46","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/randomRecipe.js":"47","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/SubstitutePopup.js":"48"},{"size":635,"mtime":1613495350780,"results":"49","hashOfConfig":"50"},{"size":3030,"mtime":1613496049248,"results":"51","hashOfConfig":"50"},{"size":362,"mtime":1612196658875,"results":"52","hashOfConfig":"50"},{"size":2785,"mtime":1613580599693,"results":"53","hashOfConfig":"50"},{"size":1048,"mtime":1613580599700,"results":"54","hashOfConfig":"50"},{"size":666,"mtime":1612912768245,"results":"55","hashOfConfig":"50"},{"size":282,"mtime":1613580599684,"results":"56","hashOfConfig":"50"},{"size":2371,"mtime":1613580599692,"results":"57","hashOfConfig":"50"},{"size":2694,"mtime":1613580599696,"results":"58","hashOfConfig":"50"},{"size":213,"mtime":1613580599687,"results":"59","hashOfConfig":"50"},{"size":1792,"mtime":1613580599691,"results":"60","hashOfConfig":"50"},{"size":6441,"mtime":1613685235964,"results":"61","hashOfConfig":"50"},{"size":2599,"mtime":1613580599688,"results":"62","hashOfConfig":"50"},{"size":5835,"mtime":1613580599695,"results":"63","hashOfConfig":"50"},{"size":2815,"mtime":1613580599688,"results":"64","hashOfConfig":"50"},{"size":541,"mtime":1613580599704,"results":"65","hashOfConfig":"50"},{"size":531,"mtime":1613580599700,"results":"66","hashOfConfig":"50"},{"size":580,"mtime":1613580599699,"results":"67","hashOfConfig":"50"},{"size":2285,"mtime":1612470174854,"results":"68","hashOfConfig":"50"},{"size":1338,"mtime":1612468981295,"results":"69","hashOfConfig":"50"},{"size":1648,"mtime":1613580599698,"results":"70","hashOfConfig":"50"},{"size":7252,"mtime":1613606992734,"results":"71","hashOfConfig":"50"},{"size":204,"mtime":1613580599687,"results":"72","hashOfConfig":"50"},{"size":5911,"mtime":1613580599689,"results":"73","hashOfConfig":"50"},{"size":1297,"mtime":1613580599689,"results":"74","hashOfConfig":"50"},{"size":4404,"mtime":1613580599695,"results":"75","hashOfConfig":"50"},{"size":496,"mtime":1613580599686,"results":"76","hashOfConfig":"50"},{"size":185,"mtime":1613580599702,"results":"77","hashOfConfig":"50"},{"size":20502,"mtime":1613580599694,"results":"78","hashOfConfig":"50"},{"size":6950,"mtime":1613581328766,"results":"79","hashOfConfig":"50"},{"size":85,"mtime":1612798979402,"results":"80","hashOfConfig":"50"},{"size":192,"mtime":1613580599704,"results":"81","hashOfConfig":"50"},{"size":2007,"mtime":1613580599697,"results":"82","hashOfConfig":"50"},{"size":1355,"mtime":1613580599693,"results":"83","hashOfConfig":"50"},{"size":204,"mtime":1613580599684,"results":"84","hashOfConfig":"50"},{"size":213,"mtime":1613580599685,"results":"85","hashOfConfig":"50"},{"size":200,"mtime":1613580599703,"results":"86","hashOfConfig":"50"},{"size":114,"mtime":1613580599686,"results":"87","hashOfConfig":"50"},{"size":212,"mtime":1613580599703,"results":"88","hashOfConfig":"50"},{"size":122,"mtime":1613580599686,"results":"89","hashOfConfig":"50"},{"size":5517,"mtime":1613580599694,"results":"90","hashOfConfig":"50"},{"size":207,"mtime":1613580599701,"results":"91","hashOfConfig":"50"},{"size":2448,"mtime":1613580599692,"results":"92","hashOfConfig":"50"},{"size":3442,"mtime":1613678953626,"results":"93","hashOfConfig":"50"},{"size":204,"mtime":1613580599685,"results":"94","hashOfConfig":"50"},{"size":543,"mtime":1613580599699,"results":"95","hashOfConfig":"50"},{"size":204,"mtime":1613580599701,"results":"96","hashOfConfig":"50"},{"size":2515,"mtime":1613580599697,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"mjj1m2",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"100"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"100"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"100"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/index.js",[],["203","204"],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/App.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reportWebVitals.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Navbar.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/index.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/currentUser.js",["205"],"const currentUser = (state = null, action) => {\n  let updatedUser;\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n    case \"CURRENT_USER\":\n      return {\n        id: action.user.id,\n        email: action.user.email,\n        name: action.user.name,\n        password: action.user.password,\n      };\n    case \"LOGOUT_USER\":\n      return null;\n    case \"CREATE_USER\":\n      return {\n        id: action.user.id,\n        email: action.user.email,\n        name: action.user.name,\n        password: action.user.password,\n      };\n    case \"EDIT_USER\":\n      return {\n        ...action.user,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default currentUser;\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/auth.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/LoginForm.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RegisterForm.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/users.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/LandingPage.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/HomePage.js",["206","207"],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Diaries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RecipesContainer.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/AccountInfo.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/weightEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/mealEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/exerciseEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/weightEntriesContainer.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/weightEntry.js",["208"],"import React from 'react'\nimport { connect } from 'react-router-dom'\n\nclass weightEntry extends React.Component{\n\n    render(){\n        return(\n            <div>\n                Hi\n                <p>{this.props.weightEntry.weight}</p>\n                <p>{this.props.weightEntry.date}</p>\n            </div>\n        )\n    }\n}\n\nexport default weightEntry",["209","210"],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/WeightEntry.js",["211"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteEntry } from \"../actions/weightEntries\";\nimport { Button } from \"semantic-ui-react\";\n\nclass WeightEntry extends React.Component {\n  handleDelete = () => {\n    const { id } = this.props.entry;\n    fetch(`http://localhost:3000/weight_entries/${id}`, {\n      method: \"DELETE\",\n    })\n      .then((resp) => resp.json())\n      .then((data) => {\n        this.props.deleteEntry(id);\n      });\n  };\n\n  render() {\n    const { weight, date, id } = this.props.entry;\n\n    const year = date.toString().slice(0, 4);\n    const month = date.toString().slice(5, 7);\n    const day = date.toString().slice(8, 10);\n    const updatedDate = `${month}/${day}/${year}`;\n    return (\n      <tbody>\n        <tr>\n          <td\n            style={{ fontWeight: \"lighter\", fontSize: \"2.5vh\" }}\n            data-label=\"date\"\n          >\n            {updatedDate}\n          </td>\n          <td\n            style={{ fontWeight: \"lighter\", fontSize: \"2.5vh\" }}\n            data-label=\"Age\"\n          >\n            {weight} lbs\n            <Button\n              icon=\"trash\"\n              style={{\n                padding: \"2px\",\n                float: \"right\",\n                backgroundColor: \"white\",\n              }}\n              onClick={() => this.handleDelete(this.props.entry.id)}\n            ></Button>\n          </td>\n        </tr>\n      </tbody>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  deleteEntry: deleteEntry,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeightEntry);\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/WeightEntriesContainer.js",["212"],"import React from \"react\";\nimport WeightEntry from \"./WeightEntry\";\nimport { connect } from \"react-redux\";\nimport { createEntry } from \"../actions/weightEntries\";\nimport { Button, Form, Input, Message } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport LineGraph from \"./LineGraph\";\n\nclass WeightEntriesContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      weight: \"\",\n      date: \"\",\n      addWeight: false,\n      showMessage: false,\n      error: \"\",\n      userW: [],\n      userD: [],\n    };\n  }\n\n  componentDidMount() {\n    let userW = this.props.weightEntries.map((entry) => {\n      return parseInt(entry.weight);\n    });\n    let userD = this.props.weightEntries.map((entry) => {\n      const year = entry.date.replace(\"-\", \"\").replace(\"-\", \"\").slice(0, 4);\n      const month = entry.date.replace(\"-\", \"\").replace(\"-\", \"\").slice(4, 6);\n      const day = entry.date.replace(\"-\", \"\").replace(\"-\", \"\").slice(6, 8);\n      return `${month}/${day}/${year}`;\n    });\n    this.setState({\n      userD: userD,\n      userW: userW,\n    });\n  }\n\n  renderNewDate = (entry) => {\n    const year = entry.date.replace(\"-\", \"\").replace(\"-\", \"\").slice(0, 4);\n    const month = entry.date.replace(\"-\", \"\").replace(\"-\", \"\").slice(4, 6);\n    const day = entry.date.replace(\"-\", \"\").replace(\"-\", \"\").slice(6, 8);\n    return `${month}/${day}/${year}`;\n  };\n  showMessage = () => {\n    this.setState({\n      showMessage: true,\n    });\n    setTimeout(() => {\n      this.setState({ showMessage: false });\n    }, 3000);\n  };\n\n  toggleAddWeight = () => {\n    this.setState({\n      addWeight: !this.state.addWeight,\n    });\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const updatedDate = this.state.date.replace(\"-\", \"\").replace(\"-\", \"\");\n    const updatedWeight = parseFloat(this.state.weight);\n    const reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        weight: updatedWeight,\n        date: updatedDate,\n        user_id: this.props.currentUser.id,\n      }),\n    };\n    fetch(\"http://localhost:3000/weight_entries\", reqObj)\n      .then((resp) => resp.json())\n      .then((newEntry) => {\n        if (newEntry.error) {\n          this.setState({\n            error: newEntry.error,\n          });\n        } else {\n          this.toggleAddWeight();\n          this.props.createEntry(newEntry);\n          this.showMessage();\n          this.setState({\n            weight: \"\",\n            date: \"\",\n            error: \"\",\n            userD: [...this.state.userD, this.renderNewDate(newEntry)],\n            userW: [...this.state.userW, parseInt(newEntry.weight)],\n          });\n        }\n      });\n  };\n\n  renderTotal = () => {\n    let total;\n    let weights = this.props.weightEntries.map((entry) => {\n      return entry.weight;\n    });\n    if (weights.length > 0) {\n      const a = weights[0];\n      const b = weights[weights.length - 1];\n      return (total = (a - b).toFixed(1));\n    } else {\n      return (total = 0);\n    }\n  };\n\n  render() {\n    const myEntry = this.props.weightEntries.map((entry) => {\n      return <WeightEntry entry={entry} key={entry.id} />;\n    });\n    return (\n      <div style={{ marginTop: \"12vh\", width: \"100%\" }}>\n        <p>My Weight Journey</p>\n        <p>Total Weight Lost: {this.renderTotal()} lbs</p>\n        <div\n          style={{\n            height: \"100%\",\n            width: \"100%\",\n            fontFamily: \"sans-serif\",\n            display: \"flex\",\n            marginTop: \"5vh\",\n            bottom: 0,\n          }}\n        >\n          <div style={{ flex: 1, margin: \"10px\" }}>\n            {this.state.showMessage ? (\n              <Message\n                style={{ fontSize: \"2vh\" }}\n                success\n                header=\"Your Weight Submission Was Successful!\"\n              />\n            ) : null}\n\n            <table\n              class=\"ui table\"\n              style={{\n                marginBottom: \"5vh\",\n                fontFamily: \"sans-serif\",\n                fontWeight: \"lighter\",\n                width: \"60%\",\n                marginLeft: \"10vh\",\n              }}\n            >\n              <thead>\n                <tr>\n                  <th style={{ fontWeight: \"lighter\", fontSize: \"3vh\" }}>\n                    Date\n                  </th>\n                  <th style={{ fontWeight: \"lighter\", fontSize: \"3vh\" }}>\n                    Weight\n                  </th>\n                </tr>\n              </thead>\n              {myEntry}\n              <tr style={{ width: \"100%\", float: \"right\" }}>\n                {this.state.addWeight ? (\n                  <Button\n                    onClick={() => this.toggleAddWeight()}\n                    className=\"ui button\"\n                    style={{ margin: \"20px\", textAlign: \"center\" }}\n                  >\n                    Add weight\n                  </Button>\n                ) : (\n                  <td>\n                    <Form style={{ width: \"250px\" }}>\n                      <Input\n                        type=\"date\"\n                        name=\"date\"\n                        value={this.state.date}\n                        onChange={this.handleChange}\n                        style={{ display: \"inline\" }}\n                      ></Input>\n                      <Input\n                        type=\"number\"\n                        name=\"weight\"\n                        value={this.state.weight}\n                        onChange={this.handleChange}\n                        placeholder=\"weight\"\n                        style={{ display: \"inline\" }}\n                      ></Input>\n\n                      <Button\n                        type=\"button\"\n                        onClick={this.handleSubmit}\n                        className=\"ui blue button\"\n                        style={{\n                          float: \"left\",\n                          marginTop: \"1vh\",\n                          marginLeft: \"4vh\",\n                        }}\n                      >\n                        Submit\n                      </Button>\n                      <Button\n                        type=\"button\"\n                        onClick={this.toggleAddWeight}\n                        className=\"ui button\"\n                        style={{\n                          float: \"right\",\n                          marginTop: \"1vh\",\n                          marginRight: \"4vh\",\n                        }}\n                      >\n                        Cancel\n                      </Button>\n                    </Form>\n                  </td>\n                )}\n              </tr>\n            </table>\n          </div>\n          <div style={{ flex: 1, margin: \"10vh\", padding: \"5px\" }}>\n            <LineGraph userD={this.state.userD} userW={this.state.userW} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    weightEntries: state.weightEntries,\n    currentUser: state.currentUser,\n  };\n};\n\nconst mapDispatchToProps = {\n  createEntry: createEntry,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WeightEntriesContainer);\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/weightEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/ExerciseEntriesContainer.js",["213"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport ExerciseEntry from \"./ExerciseEntry\";\nimport { Table, Button, Form, Input, Message } from \"semantic-ui-react\";\nimport { createEntry } from \"../actions/exerciseEntries\";\nimport { specifiedExercises } from \"../actions/specifiedExercises\";\n\nclass ExerciseEntriesContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      addExercise: true,\n      showMessage: false,\n      category: \"\",\n      duration: \"\",\n      calories_burned: \"\",\n      date: \"\",\n      error: \"\",\n    };\n  }\n\n  toggleAddExercise = () => {\n    this.setState({\n      addExercise: !this.state.addExercise,\n    });\n  };\n\n  showMessage = () => {\n    this.setState({\n      showMessage: true,\n    });\n    setTimeout(() => {\n      this.setState({ showMessage: false });\n    }, 3000);\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const category = this.state.category;\n    const duration = this.state.duration;\n    const updatedDate = parseInt(\n      this.state.date.replace(\"-\", \"\").replace(\"-\", \"\")\n    );\n    const calories_burned = this.state.calories_burned;\n    const reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        category: category,\n        duration: duration,\n        calories_burned: calories_burned,\n        user_id: this.props.currentUser.id,\n        date: updatedDate,\n      }),\n    };\n    fetch(\"http://localhost:3000/exercise_entries\", reqObj)\n      .then((resp) => resp.json())\n      .then((newEntry) => {\n        if (newEntry.error) {\n          this.setState({\n            error: newEntry.error,\n          });\n        } else {\n          this.toggleAddExercise();\n          this.props.createEntry(newEntry);\n          this.showMessage();\n        }\n        this.setState({\n          category: \"\",\n          duration: \"\",\n          calories_burned: \"\",\n          date: \"\",\n        });\n      });\n  };\n\n  renderTotal = () => {\n    let total;\n    let date = parseInt(this.props.date.replace(\"-\", \"\").replace(\"-\", \"\"));\n    const entries = this.props.exerciseEntries.filter(\n      (entry) => entry.date === date\n    );\n    let calories = entries.map((entry) => {\n      return entry.calories_burned;\n    });\n    const updatedCalories = calories.map((entry) => {\n      if (entry === undefined) {\n        return 0;\n      } else {\n        return entry;\n      }\n    });\n    if (updatedCalories.length > 0) {\n      const exerciseCals = updatedCalories.reduce((a, b) => a + b, 0);\n      return exerciseCals;\n    } else {\n      return (total = 0);\n    }\n  };\n  render() {\n    let date = parseInt(this.props.date.replace(\"-\", \"\").replace(\"-\", \"\"));\n    const entries = this.props.exerciseEntries.filter(\n      (entry) => entry.date === date\n    );\n    this.props.specifiedExercises(entries);\n    const myEntry = entries.map((entry) => (\n      <ExerciseEntry entry={entry} key={entry.id} />\n    ));\n    return (\n      <div>\n        {this.state.error ? (\n          <h4 className=\"error\">{this.state.error}</h4>\n        ) : null}\n        {this.state.showMessage ? (\n          <Message success header=\"Your Exercise Submission Was Successful!\" />\n        ) : null}\n        <Table singleLine>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Activity Type</Table.HeaderCell>\n              <Table.HeaderCell>Duration </Table.HeaderCell>\n              <Table.HeaderCell>Calories Burned</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          {myEntry}\n          <Table.Row>\n            <Table.Cell>Total Calories Burned</Table.Cell>\n            <Table.Cell></Table.Cell>\n            <Table.Cell>{this.renderTotal()} </Table.Cell>\n          </Table.Row>\n        </Table>\n\n        {this.state.addExercise ? (\n          <Button onClick={() => this.toggleAddExercise()}>Add</Button>\n        ) : (\n          <Form>\n            <Input\n              style={{ display: \"block\" }}\n              type=\"text\"\n              name=\"category\"\n              value={this.state.category}\n              onChange={this.handleChange}\n              placeholder=\"activity type\"\n            ></Input>\n\n            <Input\n              style={{ display: \"block\" }}\n              type=\"number\"\n              name=\"duration\"\n              value={this.state.duration}\n              onChange={this.handleChange}\n              placeholder=\"duration (min)\"\n            ></Input>\n            <Input\n              style={{ display: \"block\" }}\n              type=\"number\"\n              name=\"calories_burned\"\n              value={this.state.calories_burned}\n              onChange={this.handleChange}\n              placeholder=\"calories burned\"\n            ></Input>\n            <Input\n              style={{ display: \"block\" }}\n              type=\"date\"\n              name=\"date\"\n              value={this.state.date}\n              onChange={this.handleChange}\n              placeholder=\"date\"\n            ></Input>\n            <Button\n              type=\"button\"\n              onClick={this.handleSubmit}\n              className=\"ui blue button\"\n            >\n              Submit\n            </Button>\n            <Button\n              type=\"button\"\n              onClick={this.toggleAddExercise}\n              className=\"ui button\"\n            >\n              Cancel\n            </Button>\n          </Form>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n    exerciseEntries: state.exerciseEntries,\n  };\n};\n\nconst mapDispatchToProps = {\n  createEntry: createEntry,\n  specifiedExercises: specifiedExercises,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExerciseEntriesContainer);\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/ExerciseEntry.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Recipes.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/recipes.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/recipes.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RecipeCard.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/MealEntriesContainer.js",["214"],"import React from \"react\";\nimport { Table, Button, Form, Input, Popup, Message } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport MealEntry from \"./MealEntry\";\nimport { createMealEntry } from \"../actions/mealEntries\";\nimport { specifiedMeals } from \"../actions/specifiedMeals\";\nimport { Link } from \"react-router-dom\";\n\nclass MealEntriesContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: \"\",\n      fat: \"\",\n      carbs: \"\",\n      protein: \"\",\n      calories: \"\",\n      date: \"\",\n      addMeal: true,\n      showMessage: false,\n      error: \"\",\n    };\n  }\n\n  toggleAddMeal = () => {\n    this.setState({\n      addMeal: !this.state.addMeal,\n    });\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  showMessage = () => {\n    this.setState({\n      showMessage: true,\n    });\n    setTimeout(() => {\n      this.setState({ showMessage: false });\n    }, 3000);\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const name = this.state.name;\n    const fat = this.state.fat;\n    const carbs = this.state.carbs;\n    const protein = this.state.protein;\n    const calories = this.state.calories;\n    const updatedDate = parseInt(\n      this.state.date.replace(\"-\", \"\").replace(\"-\", \"\")\n    );\n    const reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name: name,\n        fat: fat,\n        carbs: carbs,\n        protein: protein,\n        calories: calories,\n        user_id: this.props.currentUser.id,\n        date: updatedDate,\n      }),\n    };\n    fetch(\"http://localhost:3000/meal_entries\", reqObj)\n      .then((resp) => resp.json())\n      .then((newEntry) => {\n        if (newEntry.error) {\n          this.setState({\n            error: newEntry.error,\n          });\n        } else {\n          this.toggleAddMeal();\n          this.showMessage();\n          this.props.createMealEntry(newEntry);\n        }\n        this.setState({\n          name: \"\",\n          fat: \"\",\n          carbs: \"\",\n          protein: \"\",\n          calories: \"\",\n          date: \"\",\n        });\n      });\n  };\n\n  renderTotal = () => {\n    let total;\n    let date = parseInt(this.props.date.replace(\"-\", \"\").replace(\"-\", \"\"));\n    const entries = this.props.mealEntries.filter(\n      (entry) => entry.date === date\n    );\n    let calories = entries.map((entry) => {\n      return entry.calories;\n    });\n    const updatedCalories = calories.map((entry) => {\n      if (entry === undefined) {\n        return 0;\n      } else {\n        return entry;\n      }\n    });\n    if (updatedCalories.length > 0) {\n      const mealCals = updatedCalories.reduce((a, b) => a + b, 0).toFixed(2);\n      return mealCals;\n    } else {\n      return (total = 0);\n    }\n  };\n\n  render() {\n    let date = parseInt(this.props.date.replace(\"-\", \"\").replace(\"-\", \"\"));\n    const entries = this.props.mealEntries.filter(\n      (entry) => entry.date === date\n    );\n    this.props.specifiedMeals(entries);\n    const myEntry = entries.map((entry) => (\n      <MealEntry entry={entry} key={entry.id} />\n    ));\n    return (\n      <div>\n        {this.state.error ? (\n          <h4 className=\"error\">{this.state.error}</h4>\n        ) : null}\n        {this.state.showMessage ? (\n          <Message success header=\"Your Meal Submission Was Successful!\" />\n        ) : null}\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Name</Table.HeaderCell>\n              <Table.HeaderCell>Fat (g)</Table.HeaderCell>\n              <Table.HeaderCell>Carbs (g)</Table.HeaderCell>\n              <Table.HeaderCell>Protein (g)</Table.HeaderCell>\n              <Table.HeaderCell>Calories</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          {myEntry}\n          <Table.Row>\n            <Table.Cell>Total Calories</Table.Cell>\n            <Table.Cell></Table.Cell>\n            <Table.Cell></Table.Cell>\n            <Table.Cell></Table.Cell>\n            <Table.Cell>{this.renderTotal()} </Table.Cell>\n          </Table.Row>\n        </Table>\n\n        {this.state.addMeal ? (\n          <Popup\n            flowing\n            hoverable\n            trigger={\n              <Button\n                style={{ marginLeft: \"25px\" }}\n                onClick={this.toggleAddMeal}\n              >\n                Add\n              </Button>\n            }\n          >\n            <p>\n              You can easily add a meal to your diary from our recipes{\" \"}\n              <Link to=\"/recipes\">here</Link>!\n            </p>\n          </Popup>\n        ) : (\n          <Form>\n            <Input\n              style={{ display: \"block\" }}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              placeholder=\"Meal Name\"\n            ></Input>\n            <Input\n              style={{ display: \"block\" }}\n              type=\"number\"\n              name=\"fat\"\n              value={this.state.fat}\n              onChange={this.handleChange}\n              placeholder=\"fat\"\n            ></Input>\n            <Input\n              style={{ display: \"block\" }}\n              type=\"number\"\n              name=\"carbs\"\n              value={this.state.carbs}\n              onChange={this.handleChange}\n              placeholder=\"carbs\"\n            ></Input>\n            <Input\n              style={{ display: \"block\" }}\n              type=\"number\"\n              name=\"protein\"\n              value={this.state.protein}\n              onChange={this.handleChange}\n              placeholder=\"protein\"\n            ></Input>\n            <Input\n              style={{ display: \"block\" }}\n              type=\"number\"\n              name=\"calories\"\n              value={this.state.calories}\n              onChange={this.handleChange}\n              placeholder=\"calories\"\n            ></Input>\n            <Input\n              style={{ display: \"block\" }}\n              type=\"date\"\n              name=\"date\"\n              value={this.state.date}\n              onChange={this.handleChange}\n              placeholder=\"date\"\n            ></Input>\n            <Button\n              type=\"button\"\n              onClick={this.handleSubmit}\n              className=\"ui blue button\"\n            >\n              Submit\n            </Button>\n            <Button\n              type=\"button\"\n              onClick={this.toggleAddMeal}\n              className=\"ui button\"\n            >\n              Cancel\n            </Button>\n          </Form>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n    mealEntries: state.mealEntries,\n  };\n};\n\nconst mapDispatchToProps = {\n  createMealEntry: createMealEntry,\n  specifiedMeals: specifiedMeals,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MealEntriesContainer);\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/history/index.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/viewRecipe.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/SearchBar.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/MealEntry.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/exerciseEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/mealEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/specificMeals.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/specifiedMeals.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/specificExercises.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/specifiedExercises.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Popup.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/nutritionInfo.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/LineGraph.js",["215","216"],"import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst LineGraph = (props) => {\n//   const [chartData, setChartData] = useState({});\n\n//   let userW;\n//   let userD;\n//   const chart = () => {\n//     userW = props.weightEntries.map((entry) => {\n//       console.log(entry);\n//       return parseInt(entry.weight);\n//     });\n//     userD = props.weightEntries.map((entry) => {\n//       const year = entry.date.replace(\"-\", \"\").replace(\"-\", \"\").slice(0, 4);\n//       const month = entry.date.replace(\"-\", \"\").replace(\"-\", \"\").slice(4, 6);\n//       const day = entry.date.replace(\"-\", \"\").replace(\"-\", \"\").slice(6, 8);\n//       return `${month}/${day}/${year}`;\n//     });\n//   };\n\n//   useEffect(() => {\n//     chart();\n\n    const chartData = {\n      labels: props.userD,\n      datasets: [\n        {\n          label: \"My Weight Journey\",\n          data: props.userW,\n          fill: false,\n          borderColor: \"rgb(47, 47, 209)\",\n          borderCapStyle: \"butt\",\n          borderJoinStyle: \"miter\",\n          pointBorderColor: \"black\",\n          pointBackgroundColor: \"#fff\",\n          pointBorderWidth: 1,\n          pointHoverRadius: 3,\n          pointHoverBackgroundColor: \"purple\",\n          pointHoverBorderColor: \"rgba(220,220,220,1)\",\n          pointHoverBorderWidth: 2,\n          pointRadius: 0,\n          pointHitRadius: 10,\n          borderWidth: 4,\n        },\n      ],\n    };\n\n//   }, []);\n\n  return (\n    <div className=\"App\">\n      <div style={{ width: \"100%\", height: \"100%\", }}>\n        <Line\n          data={chartData}\n          options={{\n            responsive: true,\n            title: { text: \"My Weight Journey\", display: false },\n            scales: {\n              yAxes: [\n                {\n                  scaleLabel: {\n                    display: true,\n                    labelString: \"Weight (lbs)\",\n                  },\n                  ticks: {\n                    autoSkip: true,\n                    maxTicksLimit: 20,\n                    beginAtZero: false,\n                  },\n                  gridLines: {\n                    display: false,\n                  },\n                },\n              ],\n              xAxes: [\n                {\n                  gridLines: {\n                    display: false,\n                  },\n                },\n              ],\n            },\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default LineGraph;\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/FavoriteRecipes.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/favoriteRecipes.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/favoriteRecipe.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/randomRecipe.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/SubstitutePopup.js",[],{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":2,"column":7,"nodeType":"223","messageId":"224","endLine":2,"endColumn":18},{"ruleId":"221","severity":1,"message":"225","line":2,"column":24,"nodeType":"223","messageId":"224","endLine":2,"endColumn":28},{"ruleId":"221","severity":1,"message":"226","line":19,"column":15,"nodeType":"223","messageId":"224","endLine":19,"endColumn":20},{"ruleId":"221","severity":1,"message":"227","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":17},{"ruleId":"217","replacedBy":"228"},{"ruleId":"219","replacedBy":"229"},{"ruleId":"221","severity":1,"message":"230","line":19,"column":27,"nodeType":"223","messageId":"224","endLine":19,"endColumn":29},{"ruleId":"221","severity":1,"message":"226","line":114,"column":15,"nodeType":"223","messageId":"224","endLine":114,"endColumn":20},{"ruleId":"221","severity":1,"message":"226","line":106,"column":15,"nodeType":"223","messageId":"224","endLine":106,"endColumn":20},{"ruleId":"221","severity":1,"message":"226","line":115,"column":15,"nodeType":"223","messageId":"224","endLine":115,"endColumn":20},{"ruleId":"221","severity":1,"message":"231","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":25},{"ruleId":"221","severity":1,"message":"232","line":1,"column":27,"nodeType":"223","messageId":"224","endLine":1,"endColumn":36},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"no-unused-vars","'updatedUser' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'total' is assigned a value but never used.","'connect' is defined but never used.",["233"],["234"],"'id' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]