[{"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/index.js":"1","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/App.js":"2","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reportWebVitals.js":"3","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Navbar.js":"4","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/index.js":"5","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/currentUser.js":"6","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/auth.js":"7","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/LoginForm.js":"8","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RegisterForm.js":"9","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/users.js":"10","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/LandingPage.js":"11","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/HomePage.js":"12","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Diaries.js":"13","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Habits.js":"14","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RecipesContainer.js":"15","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/AccountInfo.js":"16","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/weightEntries.js":"17","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/mealEntries.js":"18","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/exerciseEntries.js":"19","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/weightEntriesContainer.js":"20","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/weightEntry.js":"21","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/WeightEntry.js":"22","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/WeightEntriesContainer.js":"23","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/weightEntries.js":"24","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/ExerciseEntriesContainer.js":"25","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/ExerciseEntry.js":"26","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/NetCalories.js":"27","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Recipes.js":"28","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/recipes.js":"29","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/recipes.js":"30","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RecipeCard.js":"31","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/MealEntriesContainer.js":"32","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/history/index.js":"33","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/viewRecipe.js":"34","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/SearchBar.js":"35","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/MealEntry.js":"36","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/exerciseEntries.js":"37","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/mealEntries.js":"38"},{"size":635,"mtime":1612891601633,"results":"39","hashOfConfig":"40"},{"size":2996,"mtime":1612913094924,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":1612196658875,"results":"42","hashOfConfig":"40"},{"size":2622,"mtime":1612907864226,"results":"43","hashOfConfig":"40"},{"size":584,"mtime":1612837054185,"results":"44","hashOfConfig":"40"},{"size":666,"mtime":1612912768245,"results":"45","hashOfConfig":"40"},{"size":304,"mtime":1612890010559,"results":"46","hashOfConfig":"40"},{"size":2304,"mtime":1612898772723,"results":"47","hashOfConfig":"40"},{"size":2415,"mtime":1612898841286,"results":"48","hashOfConfig":"40"},{"size":228,"mtime":1612899877232,"results":"49","hashOfConfig":"40"},{"size":1645,"mtime":1612897539937,"results":"50","hashOfConfig":"40"},{"size":1471,"mtime":1612891528035,"results":"51","hashOfConfig":"40"},{"size":885,"mtime":1612836636781,"results":"52","hashOfConfig":"40"},{"size":197,"mtime":1612367854350,"results":"53","hashOfConfig":"40"},{"size":3519,"mtime":1612912098069,"results":"54","hashOfConfig":"40"},{"size":2678,"mtime":1612901263459,"results":"55","hashOfConfig":"40"},{"size":594,"mtime":1612890077771,"results":"56","hashOfConfig":"40"},{"size":392,"mtime":1612890069641,"results":"57","hashOfConfig":"40"},{"size":445,"mtime":1612899969602,"results":"58","hashOfConfig":"40"},{"size":2285,"mtime":1612470174854,"results":"59","hashOfConfig":"40"},{"size":1338,"mtime":1612468981295,"results":"60","hashOfConfig":"40"},{"size":1603,"mtime":1612890314261,"results":"61","hashOfConfig":"40"},{"size":5603,"mtime":1612908748232,"results":"62","hashOfConfig":"40"},{"size":221,"mtime":1612472074854,"results":"63","hashOfConfig":"40"},{"size":4905,"mtime":1612890261413,"results":"64","hashOfConfig":"40"},{"size":672,"mtime":1612838128357,"results":"65","hashOfConfig":"40"},{"size":261,"mtime":1612554930772,"results":"66","hashOfConfig":"40"},{"size":3903,"mtime":1612913757197,"results":"67","hashOfConfig":"40"},{"size":245,"mtime":1612746492881,"results":"68","hashOfConfig":"40"},{"size":202,"mtime":1612746450226,"results":"69","hashOfConfig":"40"},{"size":4515,"mtime":1612914036827,"results":"70","hashOfConfig":"40"},{"size":4675,"mtime":1612885462564,"results":"71","hashOfConfig":"40"},{"size":85,"mtime":1612798979402,"results":"72","hashOfConfig":"40"},{"size":208,"mtime":1612800409181,"results":"73","hashOfConfig":"40"},{"size":3769,"mtime":1612913783239,"results":"74","hashOfConfig":"40"},{"size":768,"mtime":1612838164169,"results":"75","hashOfConfig":"40"},{"size":117,"mtime":1612838456718,"results":"76","hashOfConfig":"40"},{"size":117,"mtime":1612838515807,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"mjj1m2",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/index.js",[],["167","168"],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/App.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reportWebVitals.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Navbar.js",["169","170","171","172","173"],"import React from 'react';\nimport 'semantic-ui-css/semantic.min.css'\nimport { Divider, Grid, Menu } from \"semantic-ui-react\";\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { logoutUser } from '../actions/auth'\nimport \"semantic-ui-css/semantic.min.css\";\nimport SearchBar from './SearchBar'\nimport history from \"../history\";\n\n\n\nimport {\n  Button,\n  Container,\n  Dropdown,\n\n  Header,\n  Icon,\n\n  Message\n} from \"semantic-ui-react\";\n\n\n\nclass Navbar extends React.Component{\n\n    handleSignOut = () => {\n      localStorage.removeItem('jwt_token')\n        this.props.logoutUser()\n    }\n\n    render(){\n        return(\n\n<div className=\"App\">\n  { this.props.currentUser ? \n        <Grid padded className=\"tablet computer only\" >\n          <Menu borderless fluid fixed=\"top\" size=\"huge\" >\n            <Container>\n            <Link to='/home'>\n              <Menu.Item style={{marginTop: '10px'}} active as=\"a\" >\n                Home\n              </Menu.Item>\n              </Link>\n              <Link to='/myWeightJourney'>\n              <Menu.Item as=\"a\" style={{marginTop: '10px'}} >My Weight Journey</Menu.Item>\n              </Link>\n              <Link to='/myDiaries'>\n              <Menu.Item as=\"a\" style={{marginTop: '10px'}} >My Diaries</Menu.Item>\n              </Link>\n              <Link to='/myHabits'>\n              <Menu.Item as=\"a\" style={{marginTop: '10px'}} >My Habits</Menu.Item>\n              </Link>\n              <Menu.Menu position=\"right\">\n              <Link to='/recipes'>\n                <Menu.Item as=\"a\" style={{marginTop: '10px'}} >Recipes</Menu.Item>\n                </Link>\n                <Menu.Item>\n             <SearchBar history={history}/>\n           </Menu.Item>\n                <Dropdown item text=\"Account\">\n                <Dropdown.Menu>\n                <Link to='/account_info'>\n                  <Dropdown.Item as=\"a\" >\n                    Settings\n                  </Dropdown.Item>\n                  </Link>\n                  <Link to='/'>\n                  <Dropdown.Item as=\"a\" onClick={this.handleSignOut}>\n                    Sign Out\n                  </Dropdown.Item>\n                  </Link>\n                </Dropdown.Menu>\n              </Dropdown>\n             \n              </Menu.Menu>\n            </Container>\n          </Menu>\n        </Grid>\n        :\n        null }\n</div>\n     \n\n        )\n    }\n\n} \n\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.currentUser\n    }\n}\n\nconst mapDispatchToProps = {\n    logoutUser: logoutUser\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/index.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/currentUser.js",["174"],"const currentUser = (state = null, action) => {\n  let updatedUser;\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n    case \"CURRENT_USER\":\n      return {\n        id: action.user.id,\n        email: action.user.email,\n        name: action.user.name,\n        password: action.user.password,\n      };\n    case \"LOGOUT_USER\":\n      return null;\n    case \"CREATE_USER\":\n      return {\n        id: action.user.id,\n        email: action.user.email,\n        name: action.user.name,\n        password: action.user.password,\n      };\n    case \"EDIT_USER\":\n      return {\n        ...action.user,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default currentUser;\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/auth.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/LoginForm.js",["175"],"import React from 'react'\nimport { connect } from 'react-redux';\nimport { loginSuccess } from '../actions/auth'\nimport { Form, Input, Message } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css' \n\nclass LoginForm extends React.Component {\n    constructor(){\n        super()\n\n        this.state = {\n            email: 'denaweiss5@gmail.com',\n            password: 'dena',\n            error: ''\n        }\n    }\n\n\n\n  handleChange = (e) => {\n      this.setState({\n          [e.target.name]: e.target.value\n      })\n  }\n\n  handleSubmit = (e) => {\n      e.preventDefault()\n\n      const reqObj = {\n          method: 'POST',\n          headers: {\n          'Content-Type': 'application/json'\n          },\n          body:  JSON.stringify({\n            email: this.state.email,\n            password: this.state.password\n          })\n      }\n      fetch(\"http://localhost:3000/auth\", reqObj)\n      .then(resp => resp.json())\n      .then(data => {\n          if (data.error){\n              this.setState({\n                  error: data.error\n              })\n          } else {\n              localStorage.setItem('jwt_token', data.jwt_token)\n              /// store token in local storage- store of memory that persists across refreshes\n              this.props.loginSuccess(data.user)\n              this.props.history.push('/home')\n          }\n      })\n  }\n\n\n  render(){\n    return(\n      <div >\n      { this.state.error ? <h4 style={{color: 'red'}}>{this.state.error}</h4> : null}\n      <Form  className='loginform' widths='equal' onSubmit={this.handleSubmit}>\n        <h1>Sign in</h1>\n        <br></br>\n       <Form.Field required>\n        <label>Email</label>\n        <Input \n        name='email' \n        placeholder='Email'\n        value={this.state.email}\n        onChange={this.handleChange} \n        />\n        </Form.Field>\n        <Form.Field required>\n        <label>Password</label>\n        <Input \n        type='password'\n        name='password' \n        placeholder='Password'\n        value={this.state.password}\n        onChange={this.handleChange}\n        />\n        </Form.Field>\n        <Form.Button content='Sign In' />\n    </Form>\n    </div>\n   )\n  }\n}\n\n\n\n\nconst mapDispatchToProps = {\n    loginSuccess: loginSuccess\n}\n\n\nexport default connect(null, mapDispatchToProps)(LoginForm);","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RegisterForm.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/users.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/LandingPage.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/HomePage.js",["176"],"import React from \"react\";\nimport { Button, Grid } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n\nclass HomePage extends React.Component {\n\n\n  render() {\n    const style = {\n      margin: \"30px\",\n      minHeight: \"100px\",\n      minWidth: \"200px\",\n      fontSize: \"20px\",\n    };\n    return (\n      <div>\n        <Grid verticalAlign=\"middle\" columns={4} centered>\n          <Grid.Row>\n            <Grid.Column>\n              <Link to=\"/myWeightJourney\">\n                <Button className=\"homebtns\" color=\"white\" style={style}>\n                  My Weight Journey\n                </Button>\n              </Link>\n            </Grid.Column>\n            <Grid.Column>\n              <Link to=\"/myDiaries\">\n                <Button className=\"homebtns\" color=\"white\" style={style}>\n                  My Diary\n                </Button>\n              </Link>\n              <br />\n              <Link to=\"/myHabits\">\n                <Button className=\"homebtns\" color=\"white\" style={style}>\n                  My Habits\n                </Button>\n              </Link>\n            </Grid.Column>\n            <Grid.Column>\n              <Link to=\"/recipes\">\n                <Button className=\"homebtns\" color=\"white\" style={style}>\n                  Recipes\n                </Button>\n              </Link>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\n\nexport default HomePage;\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Diaries.js",["177","178"],"import React from 'react'\nimport ExerciseEntriesContainer from './ExerciseEntriesContainer'\nimport { Divider, Header, Image, Grid,Segment } from 'semantic-ui-react'\nimport NetCalories from './NetCalories'\nimport MealEntriesContainer from './MealEntriesContainer'\n\n\nclass Diaries extends React.Component{\n\n    render(){\n        return (\n            <div style={{marginTop : '80px', marginBottom:'80px', textAlign: 'center'}}>\n                <Segment definition >\n                    <Header as='h3'>Meals</Header>\n                    <MealEntriesContainer/>\n    \n                    <Divider section />\n\n                    <Header as='h3' >Activities</Header>\n                    <ExerciseEntriesContainer/>\n                    <Divider section />\n                    <NetCalories/>\n                </Segment>\n           \n\n\n            </div>\n        )\n    }\n}\n\nexport default Diaries","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Habits.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RecipesContainer.js",["179"],"import React from 'react';\nimport { Button, Grid } from 'semantic-ui-react';\nimport Recipes from './Recipes';\nimport { findRecipes } from '../actions/recipes'\nimport { connect } from 'react-redux'\n\n\nclass RecipesContainer extends React.Component{\n\n\n\n    renderRecipes = (e) => {\n        const query = e.target.innerText\n        fetch(`https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/searchComplex?limitLicense=true&offset=0&number=25&query=${query}`, {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-key\": \"d6d30feb34msh027ba22c7ad5d85p111652jsn5e503987bf98\",\n                \"x-rapidapi-host\": \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\"\n            }\n        })\n        .then(resp => resp.json())\n        .then(recipesArr => {\n            const recipes = recipesArr.results.map(recipe => {\n                return recipe\n            })\n            this.props.findRecipes(recipes)\n            this.props.history.push(`/myRecipes/${query}`)\n        })\n    }\n\n\n\n    render(){\n     \n        return (\n\n            <div>\n                 \n                <Grid className='recipesgrid'>\n                <Grid.Row  columns={3}>\n                <Grid.Column >\n                <Button circular color='white' size='massive' content='Low Calories' style={{height:'175px', width:'175px', color: 'black'}} onClick={this.renderRecipes}/>\n                </Grid.Column>\n                <Grid.Column>\n                <Button circular color='white' size='massive' content='Low Carbs' style={{height:'175px', width:'175px', color: 'black'}} onClick={this.renderRecipes}/>\n                </Grid.Column>\n                <Grid.Column>\n                <Button circular color='white' size='massive' content='Low Fat' style={{height:'175px', width:'175px', color: 'black'}} onClick={this.renderRecipes}/>\n                </Grid.Column>\n                </Grid.Row>\n                <Grid.Row  columns={2}>\n                <Grid.Column>\n                <Button circular color='white' size='massive' content='High Protein' style={{height:'175px', width:'175px', color: 'black'}} onClick={this.renderRecipes}/>\n                </Grid.Column>\n                <Grid.Column>\n                <Button circular color='white' size='massive' content='Vegan' style={{height:'175px', width:'175px', color: 'black'}} onClick={this.renderRecipes}/>\n                </Grid.Column>\n                </Grid.Row>\n                <Grid.Row  columns={3}>\n                <Grid.Column>\n                <Button circular color='white' size='massive' content='Vegetarian' style={{height:'175px', width:'175px', color: 'black'}} onClick={this.renderRecipes}/>\n                </Grid.Column>\n                <Grid.Column>\n                <Button circular color='white' size='massive' content='Gluten Free' style={{height:'175px', width:'175px', color: 'black'}} onClick={this.renderRecipes}/>\n                </Grid.Column>\n                <Grid.Column>\n                <Button circular color='white' size='massive' content='Dairy Free' style={{height:'175px', width:'175px', color: 'black'}} onClick={this.renderRecipes}/>\n                </Grid.Column>\n                </Grid.Row>\n                </Grid>\n              \n                \n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    recipes: state.recipes\n    }\n}\n\nconst mapDispatchToProps = {\n    findRecipes: findRecipes\n  }\n\nexport default connect(mapStateToProps ,mapDispatchToProps)(RecipesContainer);\n\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/AccountInfo.js",["180","181"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport 'semantic-ui-css/semantic.min.css' \nimport { Form, Input } from 'semantic-ui-react'\nimport { editUser } from '../actions/users'\n\nclass AccountInfo extends React.Component{\n  \nconstructor(props){\n    super(props)\n    this.state={\n        name: props.currentUser.name ,\n        email: props.currentUser.email ,\n        password: '',\n        error: ''\n    }\n}\nhandleChange = (e) => {\n    this.setState({\n        [e.target.name]: e.target.value\n    })\n}\n\nhandleSubmit = (e) => {\n    e.preventDefault()\n    const {id} = this.props.currentUser\n    const reqObj = {\n        method: 'PATCH',\n        headers: {\n        'Content-Type': 'application/json'\n        },\n        body:  JSON.stringify({\n            email: this.state.email,\n            name: this.state.name,\n            password: this.state.password\n          })\n    }\n    fetch(`http://localhost:3000/users/${id}`, reqObj)\n    .then(resp => resp.json())\n    .then(updatedUser => {\n        if (updatedUser.error){\n            this.setState({\n                error: updatedUser.error\n            })\n        } else {\n            this.props.editUser(updatedUser)\n            this.props.history.push('/home')\n        }\n    })\n}\n    render(){\n       \n        const { name, email } = this.props.currentUser\n        return (\n            <div>\n            { this.state.error ? <h4 style={{color: 'red'}}>{this.state.error}</h4> : null}\n            <Form  className='loginform' widths='equal' onSubmit={this.handleSubmit} style={{textAlign: 'left'}}>\n            <h1>Account Info</h1>\n            <br></br>\n           <Form.Field >\n            <label>Name</label>\n            <Input \n            name='name' \n            value={this.state.name}\n            onChange={this.handleChange}\n            />\n            </Form.Field>\n            <Form.Field >\n            <label>Email</label>\n            <Input \n            name='email' \n            value={this.state.email}\n            onChange={this.handleChange}\n            />\n            </Form.Field>\n            <Form.Field >\n            <label>Password confirmation</label>\n            <Input \n            name='password' \n            value={this.state.password}\n            onChange={this.handleChange}\n            />\n            </Form.Field>\n            <Form.Button content='Save changes' />\n            <Form.Button content='Cancel' />\n        </Form>\n      \n</div>\n\n        )}\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.currentUser\n    }\n}\n\nconst mapDispatchToProps = {\n    editUser: editUser\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountInfo);","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/weightEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/mealEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/exerciseEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/weightEntriesContainer.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/weightEntry.js",["182"],"import React from 'react'\nimport { connect } from 'react-router-dom'\n\nclass weightEntry extends React.Component{\n\n    render(){\n        return(\n            <div>\n                Hi\n                <p>{this.props.weightEntry.weight}</p>\n                <p>{this.props.weightEntry.date}</p>\n            </div>\n        )\n    }\n}\n\nexport default weightEntry",["183","184"],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/WeightEntry.js",["185"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport { deleteEntry } from '../actions/weightEntries'\n\nclass WeightEntry extends React.Component{\n\n\n    handleDelete = () => {\n        const { id } = this.props.entry\n        fetch(`http://localhost:3000/weight_entries/${id}`, {\n            method: 'DELETE'\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            this.props.deleteEntry(id)\n        })\n    }\n\n    render(){\n        const { weight, date, id } = this.props.entry\n        \n        const year = date.toString().slice(0, 4)\n        const month = date.toString().slice(5,7)\n        const day = date.toString().slice(8,10)\n        const updatedDate = `${month}/${day}/${year}`\n        return(\n            <div >\n            <table className=\"ui table\">\n            <tbody>\n                <tr style={{\n                    textAlign: 'left',\n                    position: 'relative'\n                }}>\n                <td>{updatedDate}</td>\n                <td >{weight} lbs</td>\n               <td><button  className=\"ui button\" onClick={() => this.handleDelete(this.props.entry.id)} style={{\n                   float: 'right'\n               }}>\n                   Delete\n                   </button></td>\n                </tr>\n            </tbody>\n            </table>\n            </div>\n            \n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    deleteEntry: deleteEntry\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currentUser: state.currentUser\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeightEntry)","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/WeightEntriesContainer.js",["186","187"],"import React from \"react\";\nimport WeightEntry from \"./WeightEntry\";\nimport { connect } from \"react-redux\";\nimport { createEntry } from \"../actions/weightEntries\";\nimport { Button, Form, Input } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { currentUser } from \"../actions/auth\";\n\nclass WeightEntriesContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      weight: \"\",\n      date: \"\",\n      addWeight: true,\n      error: \"\",\n    };\n  }\n\n\n\n  toggleAddWeight = () => {\n    this.setState({\n      addWeight: !this.state.addWeight,\n    });\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const updatedDate = this.state.date.replace(\"-\", \"\").replace(\"-\", \"\");\n    const updatedWeight = parseFloat(this.state.weight);\n    const reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        weight: updatedWeight,\n        date: updatedDate,\n        user_id: this.props.currentUser.id,\n      }),\n    };\n    fetch(\"http://localhost:3000/weight_entries\", reqObj)\n      .then((resp) => resp.json())\n      .then((newEntry) => {\n        if (newEntry.error) {\n          this.setState({\n            error: newEntry.error,\n          });\n        } else {\n          this.toggleAddWeight();\n          this.props.createEntry(newEntry);\n          this.props.history.push(\"/myWeightJourney\");\n          this.setState({\n            weight: \"\",\n            date: \"\",\n            error: \"\",\n          });\n        }\n      });\n  };\n\n  renderTotal = () => {\n    let total;\n    let weights = this.props.weightEntries.map((entry) => {\n      return entry.weight;\n    });\n    if (weights.length > 0) {\n      const a = weights[0];\n      const b = weights[weights.length - 1];\n\n      return (total = (a - b).toFixed(1));\n    } else {\n      return (total = 0);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1\n          style={{\n            paddingTop: \"20px\",\n            paddingBottom: \"20px\",\n            marginLeft: \"20%\",\n          }}\n        >\n          My Weight Journey\n        </h1>\n        <div>\n          <table\n            className=\"ui table\"\n            style={{\n              maxWidth: \"600px\",\n              marginLeft: \"10%\",\n            }}\n          >\n            <thead>\n              <tr>\n                <th>Date</th>\n                <th>Weight</th>\n              </tr>\n            </thead>\n          </table>\n          <div\n            style={{\n              bottom: \"0\",\n              maxHeight: \"300px\",\n              width: \"600px\",\n              overflowY: \"scroll\",\n              padding: \"none\",\n              marginLeft: \"10%\",\n            }}\n          >\n            {this.props.weightEntries.map((entry) => {\n              return <WeightEntry entry={entry} key={entry.id} />;\n            })}\n          </div>\n          <table\n            className=\"ui table\"\n            style={{\n              maxWidth: \"600px\",\n              marginLeft: \"10%\",\n            }}\n          >\n            <thead>\n              <tr style={{ paddingLeft: \"100px\" }}>\n                {this.state.addWeight ? (\n                  <Button\n                    onClick={() => this.toggleAddWeight()}\n                    className=\"ui button\"\n                    style={{ margin: \"20px\", textAlign: \"center\" }}\n                  >\n                    Add weight\n                  </Button>\n                ) : (\n                  <td>\n                    <Form>\n                      <Input\n                        type=\"date\"\n                        name=\"date\"\n                        value={this.state.date}\n                        onChange={this.handleChange}\n                      ></Input>\n                      <Input\n                        type=\"number\"\n                        name=\"weight\"\n                        value={this.state.weight}\n                        onChange={this.handleChange}\n                        placeholder=\"weight\"\n                        style={{ display: \"inline\", width: \"100px\" }}\n                      ></Input>\n                      <Button\n                        type=\"button\"\n                        onClick={this.handleSubmit}\n                        className=\"ui blue button\"\n                        style={{ float: \"left\", display: \"flex\" }}\n                      >\n                        Submit\n                      </Button>\n                      <Button\n                        type=\"button\"\n                        onClick={this.toggleAddWeight}\n                        className=\"ui button\"\n                        style={{ float: \"right\", display: \"flex\" }}\n                      >\n                        Cancel\n                      </Button>\n                    </Form>\n                  </td>\n                )}\n              </tr>\n              <tr>\n                <th>Total weight lost</th>\n\n                <th\n                  style={{\n                    paddingRight: \"200px\",\n                  }}\n                  id=\"total-weight\"\n                >\n                  {this.renderTotal()} lbs\n                </th>\n              </tr>\n            </thead>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    weightEntries: state.weightEntries,\n    currentUser: state.currentUser,\n  };\n};\n\nconst mapDispatchToProps = {\n  createEntry: createEntry\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WeightEntriesContainer);\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/weightEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/ExerciseEntriesContainer.js",["188"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport ExerciseEntry from \"./ExerciseEntry\";\nimport { Table } from \"semantic-ui-react\";\nimport { Button, Form, Input } from \"semantic-ui-react\";\nimport { createEntry } from \"../actions/exerciseEntries\";\n\nclass WeightEntriesContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      addExercise: true,\n      category: \"\",\n      duration: \"\",\n      calories_burned: \"\",\n      error: \"\"\n    };\n  }\n\n  toggleAddExercise = () => {\n    this.setState({\n      addExercise: !this.state.addExercise,\n    });\n  };\n\n\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const category = this.state.category;\n    const duration = this.state.duration;\n    const calories_burned = this.state.calories_burned;\n    const reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        category: category,\n        duration: duration,\n        calories_burned: calories_burned,\n        user_id: this.props.currentUser.id,\n      }),\n    };\n    fetch(\"http://localhost:3000/exercise_entries\", reqObj)\n      .then((resp) => resp.json())\n      .then((newEntry) => {\n        if (newEntry.error) {\n          this.setState({\n            error: newEntry.error,\n          });\n        } else {\n          this.toggleAddExercise();\n          this.props.createEntry(newEntry);\n        }\n        this.setState({\n            category: \"\",\n            duration: \"\",\n            calories_burned: \"\"\n        })\n      });\n  };\n\n  renderTotal = () => {\n    let total;\n    let calories = this.props.exerciseEntries.map((entry) => {\n      return entry.calories_burned\n    });\n    const updatedCalories = (calories.map(entry => {\n        if(entry===undefined){\n            return 0\n        } else {\n            return entry\n        }\n    }))\n    if (updatedCalories.length > 0) {\n      return (updatedCalories.reduce((a, b) => a + b, 0));\n    } else {\n      return (total = 0);\n    }\n  };\n  render() {\n    return (\n      <div>\n    { this.state.error ? <h4 style={{color: 'red'}}>{this.state.error}</h4> : null}\n\n        <Table singleLine>\n          <Table.Header>\n            <Table.Row >\n              <Table.HeaderCell>Activity Type</Table.HeaderCell>\n              <Table.HeaderCell>Duration </Table.HeaderCell>\n              <Table.HeaderCell>Calories Burned</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          {this.props.exerciseEntries.map((entry) => {\n            return <ExerciseEntry entry={entry} key={entry.id} />;\n          })}\n          <Table.Row >\n            <Table.Cell>Total Calories Burned</Table.Cell>\n            <Table.Cell></Table.Cell>\n            <Table.Cell>{this.renderTotal()} </Table.Cell>\n          </Table.Row>\n        </Table>\n    \n          {this.state.addExercise ? (\n            <Button\n              onClick={() => this.toggleAddExercise()}\n              \n            >\n              Add\n            </Button>\n          ) : (\n         \n              <Form >\n                <Input\n                style={{display: 'block'}}\n                  type=\"text\"\n                  name=\"category\"\n                  value={this.state.category}\n                  onChange={this.handleChange}\n                  placeholder=\"activity type\"\n                ></Input>\n     \n                <Input\n           style={{display: 'block'}}\n                  type=\"number\"\n                  name=\"duration\"\n                  value={this.state.duration}\n                  onChange={this.handleChange}\n                  placeholder=\"duration (min)\"\n                ></Input>\n                <Input\n                 style={{display: 'block'}}\n                  type=\"number\"\n                  name=\"calories_burned\"\n                  value={this.state.calories_burned}\n                  onChange={this.handleChange}\n                  placeholder=\"calories burned\"\n                ></Input>\n                <Button\n                  type=\"button\"\n                  onClick={this.handleSubmit}\n                  className=\"ui blue button\"\n                >\n                  Submit\n                </Button>\n                <Button\n                  type=\"button\"\n                  onClick={this.toggleAddExercise}\n                  className=\"ui button\"\n                >\n                  Cancel\n                </Button>\n              </Form>\n         \n          )}\n   \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n    exerciseEntries: state.exerciseEntries,\n  };\n};\n\nconst mapDispatchToProps = {\n  createEntry: createEntry,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WeightEntriesContainer);\n","/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/ExerciseEntry.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/NetCalories.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/Recipes.js",["189","190"],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/recipes.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/recipes.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/RecipeCard.js",["191","192"],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/MealEntriesContainer.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/history/index.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/reducers/viewRecipe.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/SearchBar.js",["193","194","195","196"],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/components/MealEntry.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/exerciseEntries.js",[],"/Users/denaweiss/Flatiron/CapstoneProject/frontend/src/actions/mealEntries.js",[],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":17},{"ruleId":"201","severity":1,"message":"205","line":14,"column":3,"nodeType":"203","messageId":"204","endLine":14,"endColumn":9},{"ruleId":"201","severity":1,"message":"206","line":18,"column":3,"nodeType":"203","messageId":"204","endLine":18,"endColumn":9},{"ruleId":"201","severity":1,"message":"207","line":19,"column":3,"nodeType":"203","messageId":"204","endLine":19,"endColumn":7},{"ruleId":"201","severity":1,"message":"208","line":21,"column":3,"nodeType":"203","messageId":"204","endLine":21,"endColumn":10},{"ruleId":"201","severity":1,"message":"209","line":2,"column":7,"nodeType":"203","messageId":"204","endLine":2,"endColumn":18},{"ruleId":"201","severity":1,"message":"208","line":4,"column":23,"nodeType":"203","messageId":"204","endLine":4,"endColumn":30},{"ruleId":"201","severity":1,"message":"210","line":4,"column":10,"nodeType":"203","messageId":"204","endLine":4,"endColumn":17},{"ruleId":"201","severity":1,"message":"211","line":3,"column":27,"nodeType":"203","messageId":"204","endLine":3,"endColumn":32},{"ruleId":"201","severity":1,"message":"212","line":3,"column":34,"nodeType":"203","messageId":"204","endLine":3,"endColumn":38},{"ruleId":"201","severity":1,"message":"213","line":3,"column":8,"nodeType":"203","messageId":"204","endLine":3,"endColumn":15},{"ruleId":"201","severity":1,"message":"214","line":53,"column":17,"nodeType":"203","messageId":"204","endLine":53,"endColumn":21},{"ruleId":"201","severity":1,"message":"215","line":53,"column":23,"nodeType":"203","messageId":"204","endLine":53,"endColumn":28},{"ruleId":"201","severity":1,"message":"210","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":17},{"ruleId":"197","replacedBy":"216"},{"ruleId":"199","replacedBy":"217"},{"ruleId":"201","severity":1,"message":"218","line":20,"column":31,"nodeType":"203","messageId":"204","endLine":20,"endColumn":33},{"ruleId":"201","severity":1,"message":"219","line":7,"column":10,"nodeType":"203","messageId":"204","endLine":7,"endColumn":21},{"ruleId":"201","severity":1,"message":"220","line":81,"column":15,"nodeType":"203","messageId":"204","endLine":81,"endColumn":20},{"ruleId":"201","severity":1,"message":"220","line":86,"column":15,"nodeType":"203","messageId":"204","endLine":86,"endColumn":20},{"ruleId":"201","severity":1,"message":"207","line":4,"column":16,"nodeType":"203","messageId":"204","endLine":4,"endColumn":20},{"ruleId":"201","severity":1,"message":"221","line":5,"column":8,"nodeType":"203","messageId":"204","endLine":5,"endColumn":18},{"ruleId":"201","severity":1,"message":"222","line":2,"column":18,"nodeType":"203","messageId":"204","endLine":2,"endColumn":22},{"ruleId":"201","severity":1,"message":"207","line":2,"column":24,"nodeType":"203","messageId":"204","endLine":2,"endColumn":28},{"ruleId":"201","severity":1,"message":"223","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":18},{"ruleId":"201","severity":1,"message":"202","line":4,"column":10,"nodeType":"203","messageId":"204","endLine":4,"endColumn":17},{"ruleId":"201","severity":1,"message":"212","line":4,"column":19,"nodeType":"203","messageId":"204","endLine":4,"endColumn":23},{"ruleId":"201","severity":1,"message":"224","line":4,"column":25,"nodeType":"203","messageId":"204","endLine":4,"endColumn":29},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Header' is defined but never used.","'Icon' is defined but never used.","'Message' is defined but never used.","'updatedUser' is defined but never used.","'connect' is defined but never used.","'Image' is defined but never used.","'Grid' is defined but never used.","'Recipes' is defined but never used.","'name' is assigned a value but never used.","'email' is assigned a value but never used.",["225"],["226"],"'id' is assigned a value but never used.","'currentUser' is defined but never used.","'total' is assigned a value but never used.","'RecipeCard' is defined but never used.","'Card' is defined but never used.","'Dropdown' is defined but never used.","'Menu' is defined but never used.","no-global-assign","no-unsafe-negation"]